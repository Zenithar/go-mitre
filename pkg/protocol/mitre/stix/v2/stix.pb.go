// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/protocol/mitre/stix/v2/stix.proto

/*
Package stixv2 is a generated protocol buffer package.

It is generated from these files:
	pkg/protocol/mitre/stix/v2/stix.proto

It has these top-level messages:
	ExternalReference
	KillChainPhase
	MarkingDefinition
	GranularMarking
	ObservableObject
	AttackPattern
	Campaign
	CourseOfAction
	Identity
	Indicator
	IntrusionSet
	Malware
	ObservedData
	Report
	ThreatActor
	Tool
	Vulnerability
	RelationShip
	Sighting
	Bundle
	DomainObject
	RelationObject
*/
package stixv2

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// External references is used to link to external resource.
type ExternalReference struct {
	SourceName string `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Url        string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (m *ExternalReference) Reset()                    { *m = ExternalReference{} }
func (m *ExternalReference) String() string            { return proto.CompactTextString(m) }
func (*ExternalReference) ProtoMessage()               {}
func (*ExternalReference) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{0} }

func (m *ExternalReference) GetSourceName() string {
	if m != nil {
		return m.SourceName
	}
	return ""
}

func (m *ExternalReference) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *ExternalReference) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// KillChainPhase describes which pahse of the kill chain the resource in acting.
type KillChainPhase struct {
	PhaseName     string `protobuf:"bytes,1,opt,name=phase_name,json=phaseName,proto3" json:"phase_name,omitempty"`
	KillChainName string `protobuf:"bytes,2,opt,name=kill_chain_name,json=killChainName,proto3" json:"kill_chain_name,omitempty"`
}

func (m *KillChainPhase) Reset()                    { *m = KillChainPhase{} }
func (m *KillChainPhase) String() string            { return proto.CompactTextString(m) }
func (*KillChainPhase) ProtoMessage()               {}
func (*KillChainPhase) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{1} }

func (m *KillChainPhase) GetPhaseName() string {
	if m != nil {
		return m.PhaseName
	}
	return ""
}

func (m *KillChainPhase) GetKillChainName() string {
	if m != nil {
		return m.KillChainName
	}
	return ""
}

// MarkingDefinition ... .
type MarkingDefinition struct {
	Type           string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id             string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef   string            `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created        string            `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified       string            `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	DefinitionType string            `protobuf:"bytes,9,opt,name=definition_type,json=definitionType,proto3" json:"definition_type,omitempty"`
	Definitions    map[string]string `protobuf:"bytes,10,rep,name=definitions" json:"definitions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *MarkingDefinition) Reset()                    { *m = MarkingDefinition{} }
func (m *MarkingDefinition) String() string            { return proto.CompactTextString(m) }
func (*MarkingDefinition) ProtoMessage()               {}
func (*MarkingDefinition) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{2} }

func (m *MarkingDefinition) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MarkingDefinition) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MarkingDefinition) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *MarkingDefinition) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *MarkingDefinition) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *MarkingDefinition) GetDefinitionType() string {
	if m != nil {
		return m.DefinitionType
	}
	return ""
}

func (m *MarkingDefinition) GetDefinitions() map[string]string {
	if m != nil {
		return m.Definitions
	}
	return nil
}

// GranularMarking is used to add annotation on indicators.
type GranularMarking struct {
	MarkingRef string   `protobuf:"bytes,1,opt,name=marking_ref,json=markingRef,proto3" json:"marking_ref,omitempty"`
	Selector   []string `protobuf:"bytes,2,rep,name=selector" json:"selector,omitempty"`
}

func (m *GranularMarking) Reset()                    { *m = GranularMarking{} }
func (m *GranularMarking) String() string            { return proto.CompactTextString(m) }
func (*GranularMarking) ProtoMessage()               {}
func (*GranularMarking) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{3} }

func (m *GranularMarking) GetMarkingRef() string {
	if m != nil {
		return m.MarkingRef
	}
	return ""
}

func (m *GranularMarking) GetSelector() []string {
	if m != nil {
		return m.Selector
	}
	return nil
}

// ObservableObject ... .
type ObservableObject struct {
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (m *ObservableObject) Reset()                    { *m = ObservableObject{} }
func (m *ObservableObject) String() string            { return proto.CompactTextString(m) }
func (*ObservableObject) ProtoMessage()               {}
func (*ObservableObject) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{4} }

func (m *ObservableObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// A type of Tactics, Techniques, and Procedures (TTP) that describes
// ways threat actors attempt to compromise targets.
type AttackPattern struct {
	Type               string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	Name               string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description        string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	KillChainPhases    []*KillChainPhase    `protobuf:"bytes,13,rep,name=kill_chain_phases,json=killChainPhases" json:"kill_chain_phases,omitempty"`
}

func (m *AttackPattern) Reset()                    { *m = AttackPattern{} }
func (m *AttackPattern) String() string            { return proto.CompactTextString(m) }
func (*AttackPattern) ProtoMessage()               {}
func (*AttackPattern) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{5} }

func (m *AttackPattern) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AttackPattern) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AttackPattern) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *AttackPattern) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *AttackPattern) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *AttackPattern) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *AttackPattern) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *AttackPattern) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *AttackPattern) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *AttackPattern) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *AttackPattern) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AttackPattern) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AttackPattern) GetKillChainPhases() []*KillChainPhase {
	if m != nil {
		return m.KillChainPhases
	}
	return nil
}

// A grouping of adversarial behaviors that describes a set of
// malicious activities or attacks that occur over a period of time
// against a specific set of targets.
type Campaign struct {
	Type               string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	Name               string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description        string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	Aliases            []string             `protobuf:"bytes,13,rep,name=aliases" json:"aliases,omitempty"`
	FirstSeen          string               `protobuf:"bytes,14,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	LastSeen           string               `protobuf:"bytes,15,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Objective          string               `protobuf:"bytes,16,opt,name=objective,proto3" json:"objective,omitempty"`
}

func (m *Campaign) Reset()                    { *m = Campaign{} }
func (m *Campaign) String() string            { return proto.CompactTextString(m) }
func (*Campaign) ProtoMessage()               {}
func (*Campaign) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{6} }

func (m *Campaign) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Campaign) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Campaign) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *Campaign) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Campaign) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *Campaign) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *Campaign) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Campaign) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *Campaign) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *Campaign) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *Campaign) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Campaign) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Campaign) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *Campaign) GetFirstSeen() string {
	if m != nil {
		return m.FirstSeen
	}
	return ""
}

func (m *Campaign) GetLastSeen() string {
	if m != nil {
		return m.LastSeen
	}
	return ""
}

func (m *Campaign) GetObjective() string {
	if m != nil {
		return m.Objective
	}
	return ""
}

// An action taken to either prevent an attack or respond to an attack.
type CourseOfAction struct {
	Type               string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	Name               string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description        string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *CourseOfAction) Reset()                    { *m = CourseOfAction{} }
func (m *CourseOfAction) String() string            { return proto.CompactTextString(m) }
func (*CourseOfAction) ProtoMessage()               {}
func (*CourseOfAction) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{7} }

func (m *CourseOfAction) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CourseOfAction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CourseOfAction) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *CourseOfAction) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *CourseOfAction) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *CourseOfAction) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *CourseOfAction) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CourseOfAction) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *CourseOfAction) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *CourseOfAction) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *CourseOfAction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CourseOfAction) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// Individuals, organizations, or groups, as well as classes of
// individuals, organizations, or groups.
type Identity struct {
	Type               string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	Name               string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description        string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	IdentityClass      string               `protobuf:"bytes,13,opt,name=identity_class,json=identityClass,proto3" json:"identity_class,omitempty"`
	Sectors            []string             `protobuf:"bytes,14,rep,name=sectors" json:"sectors,omitempty"`
	ContactInformation string               `protobuf:"bytes,15,opt,name=contact_information,json=contactInformation,proto3" json:"contact_information,omitempty"`
}

func (m *Identity) Reset()                    { *m = Identity{} }
func (m *Identity) String() string            { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()               {}
func (*Identity) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{8} }

func (m *Identity) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Identity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Identity) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *Identity) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Identity) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *Identity) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *Identity) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Identity) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *Identity) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *Identity) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *Identity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Identity) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Identity) GetIdentityClass() string {
	if m != nil {
		return m.IdentityClass
	}
	return ""
}

func (m *Identity) GetSectors() []string {
	if m != nil {
		return m.Sectors
	}
	return nil
}

func (m *Identity) GetContactInformation() string {
	if m != nil {
		return m.ContactInformation
	}
	return ""
}

// Contains a pattern that can be used to detect suspicious or
// malicious cyber activity.
type Indicator struct {
	Type               string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	Name               string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description        string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	Pattern            string               `protobuf:"bytes,13,opt,name=pattern,proto3" json:"pattern,omitempty"`
	ValidFrom          string               `protobuf:"bytes,14,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidUntil         string               `protobuf:"bytes,15,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	KillChainPhases    []*KillChainPhase    `protobuf:"bytes,16,rep,name=kill_chain_phases,json=killChainPhases" json:"kill_chain_phases,omitempty"`
}

func (m *Indicator) Reset()                    { *m = Indicator{} }
func (m *Indicator) String() string            { return proto.CompactTextString(m) }
func (*Indicator) ProtoMessage()               {}
func (*Indicator) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{9} }

func (m *Indicator) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Indicator) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Indicator) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *Indicator) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Indicator) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *Indicator) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *Indicator) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Indicator) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *Indicator) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *Indicator) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *Indicator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Indicator) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Indicator) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *Indicator) GetValidFrom() string {
	if m != nil {
		return m.ValidFrom
	}
	return ""
}

func (m *Indicator) GetValidUntil() string {
	if m != nil {
		return m.ValidUntil
	}
	return ""
}

func (m *Indicator) GetKillChainPhases() []*KillChainPhase {
	if m != nil {
		return m.KillChainPhases
	}
	return nil
}

// A grouped set of adversarial behaviors and resources with common
// properties believed to be orchestrated by a single threat actor.
type IntrusionSet struct {
	Type                 string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                   string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef         string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created              string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified             string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked              bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels               []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences   []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs    []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings     []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	Name                 string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	Aliases              []string             `protobuf:"bytes,13,rep,name=aliases" json:"aliases,omitempty"`
	FirstSeen            string               `protobuf:"bytes,14,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	LastSeen             string               `protobuf:"bytes,15,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Goals                []string             `protobuf:"bytes,16,rep,name=goals" json:"goals,omitempty"`
	ResourceLevel        string               `protobuf:"bytes,17,opt,name=resource_level,json=resourceLevel,proto3" json:"resource_level,omitempty"`
	PrimaryMotivation    string               `protobuf:"bytes,18,opt,name=primary_motivation,json=primaryMotivation,proto3" json:"primary_motivation,omitempty"`
	SecondaryMotivations []string             `protobuf:"bytes,19,rep,name=secondary_motivations,json=secondaryMotivations" json:"secondary_motivations,omitempty"`
}

func (m *IntrusionSet) Reset()                    { *m = IntrusionSet{} }
func (m *IntrusionSet) String() string            { return proto.CompactTextString(m) }
func (*IntrusionSet) ProtoMessage()               {}
func (*IntrusionSet) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{10} }

func (m *IntrusionSet) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *IntrusionSet) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IntrusionSet) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *IntrusionSet) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *IntrusionSet) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *IntrusionSet) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *IntrusionSet) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *IntrusionSet) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *IntrusionSet) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *IntrusionSet) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *IntrusionSet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IntrusionSet) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *IntrusionSet) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *IntrusionSet) GetFirstSeen() string {
	if m != nil {
		return m.FirstSeen
	}
	return ""
}

func (m *IntrusionSet) GetLastSeen() string {
	if m != nil {
		return m.LastSeen
	}
	return ""
}

func (m *IntrusionSet) GetGoals() []string {
	if m != nil {
		return m.Goals
	}
	return nil
}

func (m *IntrusionSet) GetResourceLevel() string {
	if m != nil {
		return m.ResourceLevel
	}
	return ""
}

func (m *IntrusionSet) GetPrimaryMotivation() string {
	if m != nil {
		return m.PrimaryMotivation
	}
	return ""
}

func (m *IntrusionSet) GetSecondaryMotivations() []string {
	if m != nil {
		return m.SecondaryMotivations
	}
	return nil
}

// A type of TTP, also known as malicious code and malicious software,
// used to compromise the confidentiality, integrity, or availability
// of a victim’s data or system.
type Malware struct {
	Type               string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	Name               string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description        string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	KillChainPhases    []*KillChainPhase    `protobuf:"bytes,13,rep,name=kill_chain_phases,json=killChainPhases" json:"kill_chain_phases,omitempty"`
}

func (m *Malware) Reset()                    { *m = Malware{} }
func (m *Malware) String() string            { return proto.CompactTextString(m) }
func (*Malware) ProtoMessage()               {}
func (*Malware) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{11} }

func (m *Malware) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Malware) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Malware) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *Malware) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Malware) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *Malware) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *Malware) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Malware) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *Malware) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *Malware) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *Malware) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Malware) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Malware) GetKillChainPhases() []*KillChainPhase {
	if m != nil {
		return m.KillChainPhases
	}
	return nil
}

// Conveys information observed on a system or network (e.g., an IP address).
type ObservedData struct {
	Type               string                      `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string                      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string                      `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string                      `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string                      `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                        `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string                    `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference        `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string                    `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking          `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	FirstObserved      string                      `protobuf:"bytes,11,opt,name=first_observed,json=firstObserved,proto3" json:"first_observed,omitempty"`
	LastObserved       string                      `protobuf:"bytes,12,opt,name=last_observed,json=lastObserved,proto3" json:"last_observed,omitempty"`
	NumberObserved     int64                       `protobuf:"zigzag64,13,opt,name=number_observed,json=numberObserved,proto3" json:"number_observed,omitempty"`
	Objects            map[int64]*ObservableObject `protobuf:"bytes,14,rep,name=objects" json:"objects,omitempty" protobuf_key:"zigzag64,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ObservedData) Reset()                    { *m = ObservedData{} }
func (m *ObservedData) String() string            { return proto.CompactTextString(m) }
func (*ObservedData) ProtoMessage()               {}
func (*ObservedData) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{12} }

func (m *ObservedData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ObservedData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ObservedData) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *ObservedData) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *ObservedData) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *ObservedData) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *ObservedData) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ObservedData) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *ObservedData) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *ObservedData) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *ObservedData) GetFirstObserved() string {
	if m != nil {
		return m.FirstObserved
	}
	return ""
}

func (m *ObservedData) GetLastObserved() string {
	if m != nil {
		return m.LastObserved
	}
	return ""
}

func (m *ObservedData) GetNumberObserved() int64 {
	if m != nil {
		return m.NumberObserved
	}
	return 0
}

func (m *ObservedData) GetObjects() map[int64]*ObservableObject {
	if m != nil {
		return m.Objects
	}
	return nil
}

// Collections of threat intelligence focused on one or more topics, such as
// a description of a threat actor, malware, or attack technique, including
// contextual details.
type Report struct {
	Type               string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	Name               string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description        string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	Published          string               `protobuf:"bytes,13,opt,name=published,proto3" json:"published,omitempty"`
	ObjectRefs         []string             `protobuf:"bytes,14,rep,name=object_refs,json=objectRefs" json:"object_refs,omitempty"`
}

func (m *Report) Reset()                    { *m = Report{} }
func (m *Report) String() string            { return proto.CompactTextString(m) }
func (*Report) ProtoMessage()               {}
func (*Report) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{13} }

func (m *Report) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Report) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Report) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *Report) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Report) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *Report) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *Report) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Report) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *Report) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *Report) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *Report) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Report) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Report) GetPublished() string {
	if m != nil {
		return m.Published
	}
	return ""
}

func (m *Report) GetObjectRefs() []string {
	if m != nil {
		return m.ObjectRefs
	}
	return nil
}

// Individuals, groups, or organizations believed to be operating with
// malicious intent.
type ThreatActor struct {
	Type                 string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                   string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef         string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created              string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified             string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked              bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels               []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences   []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs    []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings     []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	Name                 string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	Aliases              []string             `protobuf:"bytes,13,rep,name=aliases" json:"aliases,omitempty"`
	Roles                []string             `protobuf:"bytes,14,rep,name=roles" json:"roles,omitempty"`
	Goals                []string             `protobuf:"bytes,15,rep,name=goals" json:"goals,omitempty"`
	Sophistication       string               `protobuf:"bytes,16,opt,name=sophistication,proto3" json:"sophistication,omitempty"`
	ResourceLevel        string               `protobuf:"bytes,17,opt,name=resource_level,json=resourceLevel,proto3" json:"resource_level,omitempty"`
	PrimaryMotivation    string               `protobuf:"bytes,18,opt,name=primary_motivation,json=primaryMotivation,proto3" json:"primary_motivation,omitempty"`
	SecondaryMotivations []string             `protobuf:"bytes,19,rep,name=secondary_motivations,json=secondaryMotivations" json:"secondary_motivations,omitempty"`
	PersonalMotivations  []string             `protobuf:"bytes,20,rep,name=personal_motivations,json=personalMotivations" json:"personal_motivations,omitempty"`
}

func (m *ThreatActor) Reset()                    { *m = ThreatActor{} }
func (m *ThreatActor) String() string            { return proto.CompactTextString(m) }
func (*ThreatActor) ProtoMessage()               {}
func (*ThreatActor) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{14} }

func (m *ThreatActor) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ThreatActor) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ThreatActor) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *ThreatActor) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *ThreatActor) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *ThreatActor) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *ThreatActor) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ThreatActor) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *ThreatActor) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *ThreatActor) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *ThreatActor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ThreatActor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ThreatActor) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *ThreatActor) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *ThreatActor) GetGoals() []string {
	if m != nil {
		return m.Goals
	}
	return nil
}

func (m *ThreatActor) GetSophistication() string {
	if m != nil {
		return m.Sophistication
	}
	return ""
}

func (m *ThreatActor) GetResourceLevel() string {
	if m != nil {
		return m.ResourceLevel
	}
	return ""
}

func (m *ThreatActor) GetPrimaryMotivation() string {
	if m != nil {
		return m.PrimaryMotivation
	}
	return ""
}

func (m *ThreatActor) GetSecondaryMotivations() []string {
	if m != nil {
		return m.SecondaryMotivations
	}
	return nil
}

func (m *ThreatActor) GetPersonalMotivations() []string {
	if m != nil {
		return m.PersonalMotivations
	}
	return nil
}

// Legitimate software that can be used by threat actors to perform attacks.
type Tool struct {
	Type               string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	Name               string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description        string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	KillChainPhases    []*KillChainPhase    `protobuf:"bytes,13,rep,name=kill_chain_phases,json=killChainPhases" json:"kill_chain_phases,omitempty"`
	ToolVersion        string               `protobuf:"bytes,14,opt,name=tool_version,json=toolVersion,proto3" json:"tool_version,omitempty"`
}

func (m *Tool) Reset()                    { *m = Tool{} }
func (m *Tool) String() string            { return proto.CompactTextString(m) }
func (*Tool) ProtoMessage()               {}
func (*Tool) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{15} }

func (m *Tool) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Tool) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Tool) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *Tool) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Tool) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *Tool) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *Tool) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Tool) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *Tool) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *Tool) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *Tool) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tool) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Tool) GetKillChainPhases() []*KillChainPhase {
	if m != nil {
		return m.KillChainPhases
	}
	return nil
}

func (m *Tool) GetToolVersion() string {
	if m != nil {
		return m.ToolVersion
	}
	return ""
}

// A mistake in software that can be directly used by a hacker to gain
// access to a system or network.
type Vulnerability struct {
	Type               string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	Name               string               `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description        string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *Vulnerability) Reset()                    { *m = Vulnerability{} }
func (m *Vulnerability) String() string            { return proto.CompactTextString(m) }
func (*Vulnerability) ProtoMessage()               {}
func (*Vulnerability) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{16} }

func (m *Vulnerability) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Vulnerability) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Vulnerability) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *Vulnerability) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Vulnerability) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *Vulnerability) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *Vulnerability) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Vulnerability) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *Vulnerability) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *Vulnerability) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *Vulnerability) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Vulnerability) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// Used to link two SDOs and to describe how they are related to each other.
type RelationShip struct {
	Type               string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	RelationshipType   string               `protobuf:"bytes,11,opt,name=relationship_type,json=relationshipType,proto3" json:"relationship_type,omitempty"`
	Description        string               `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	SourceRef          string               `protobuf:"bytes,13,opt,name=source_ref,json=sourceRef,proto3" json:"source_ref,omitempty"`
	TargetRef          string               `protobuf:"bytes,14,opt,name=target_ref,json=targetRef,proto3" json:"target_ref,omitempty"`
}

func (m *RelationShip) Reset()                    { *m = RelationShip{} }
func (m *RelationShip) String() string            { return proto.CompactTextString(m) }
func (*RelationShip) ProtoMessage()               {}
func (*RelationShip) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{17} }

func (m *RelationShip) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RelationShip) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RelationShip) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *RelationShip) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *RelationShip) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *RelationShip) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *RelationShip) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *RelationShip) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *RelationShip) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *RelationShip) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *RelationShip) GetRelationshipType() string {
	if m != nil {
		return m.RelationshipType
	}
	return ""
}

func (m *RelationShip) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RelationShip) GetSourceRef() string {
	if m != nil {
		return m.SourceRef
	}
	return ""
}

func (m *RelationShip) GetTargetRef() string {
	if m != nil {
		return m.TargetRef
	}
	return ""
}

// Denotes the belief that an element of CTI was seen (e.g., indicator, malware).
type Sighting struct {
	Type               string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                 string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedByRef       string               `protobuf:"bytes,3,opt,name=created_by_ref,json=createdByRef,proto3" json:"created_by_ref,omitempty"`
	Created            string               `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified           string               `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Revoked            bool                 `protobuf:"varint,6,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Labels             []string             `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty"`
	ExternalReferences []*ExternalReference `protobuf:"bytes,8,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	ObjectMarkingRefs  []string             `protobuf:"bytes,9,rep,name=object_marking_refs,json=objectMarkingRefs" json:"object_marking_refs,omitempty"`
	GranularMarkings   []*GranularMarking   `protobuf:"bytes,10,rep,name=granular_markings,json=granularMarkings" json:"granular_markings,omitempty"`
	FirstSeen          string               `protobuf:"bytes,11,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	LastSeen           string               `protobuf:"bytes,12,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Count              int64                `protobuf:"zigzag64,13,opt,name=count,proto3" json:"count,omitempty"`
	SightingOfRef      string               `protobuf:"bytes,14,opt,name=sighting_of_ref,json=sightingOfRef,proto3" json:"sighting_of_ref,omitempty"`
	ObservedDataRefs   []string             `protobuf:"bytes,15,rep,name=observed_data_refs,json=observedDataRefs" json:"observed_data_refs,omitempty"`
	WhereSightedRefs   []string             `protobuf:"bytes,16,rep,name=where_sighted_refs,json=whereSightedRefs" json:"where_sighted_refs,omitempty"`
	Summary            bool                 `protobuf:"varint,17,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (m *Sighting) Reset()                    { *m = Sighting{} }
func (m *Sighting) String() string            { return proto.CompactTextString(m) }
func (*Sighting) ProtoMessage()               {}
func (*Sighting) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{18} }

func (m *Sighting) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Sighting) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Sighting) GetCreatedByRef() string {
	if m != nil {
		return m.CreatedByRef
	}
	return ""
}

func (m *Sighting) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Sighting) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *Sighting) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *Sighting) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Sighting) GetExternalReferences() []*ExternalReference {
	if m != nil {
		return m.ExternalReferences
	}
	return nil
}

func (m *Sighting) GetObjectMarkingRefs() []string {
	if m != nil {
		return m.ObjectMarkingRefs
	}
	return nil
}

func (m *Sighting) GetGranularMarkings() []*GranularMarking {
	if m != nil {
		return m.GranularMarkings
	}
	return nil
}

func (m *Sighting) GetFirstSeen() string {
	if m != nil {
		return m.FirstSeen
	}
	return ""
}

func (m *Sighting) GetLastSeen() string {
	if m != nil {
		return m.LastSeen
	}
	return ""
}

func (m *Sighting) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Sighting) GetSightingOfRef() string {
	if m != nil {
		return m.SightingOfRef
	}
	return ""
}

func (m *Sighting) GetObservedDataRefs() []string {
	if m != nil {
		return m.ObservedDataRefs
	}
	return nil
}

func (m *Sighting) GetWhereSightedRefs() []string {
	if m != nil {
		return m.WhereSightedRefs
	}
	return nil
}

func (m *Sighting) GetSummary() bool {
	if m != nil {
		return m.Summary
	}
	return false
}

// Bundle represents STIX Object bundle.
type Bundle struct {
	Sdos map[string]*DomainObject   `protobuf:"bytes,1,rep,name=sdos" json:"sdos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	Sros map[string]*RelationObject `protobuf:"bytes,2,rep,name=sros" json:"sros,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Bundle) Reset()                    { *m = Bundle{} }
func (m *Bundle) String() string            { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()               {}
func (*Bundle) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{19} }

func (m *Bundle) GetSdos() map[string]*DomainObject {
	if m != nil {
		return m.Sdos
	}
	return nil
}

func (m *Bundle) GetSros() map[string]*RelationObject {
	if m != nil {
		return m.Sros
	}
	return nil
}

// Domain object are nodes of STIX graph.
type DomainObject struct {
	// Types that are valid to be assigned to Object:
	//	*DomainObject_AttackPattern
	//	*DomainObject_Campaign
	//	*DomainObject_CourseOfAction
	//	*DomainObject_Identity
	//	*DomainObject_Indicator
	//	*DomainObject_IntrusionSet
	//	*DomainObject_Malware
	//	*DomainObject_ObservedData
	//	*DomainObject_Report
	//	*DomainObject_ThreatActor
	//	*DomainObject_Tool
	//	*DomainObject_Vulnerability
	Object isDomainObject_Object `protobuf_oneof:"object"`
}

func (m *DomainObject) Reset()                    { *m = DomainObject{} }
func (m *DomainObject) String() string            { return proto.CompactTextString(m) }
func (*DomainObject) ProtoMessage()               {}
func (*DomainObject) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{20} }

type isDomainObject_Object interface {
	isDomainObject_Object()
}

type DomainObject_AttackPattern struct {
	AttackPattern *AttackPattern `protobuf:"bytes,1,opt,name=attack_pattern,json=attackPattern,oneof"`
}
type DomainObject_Campaign struct {
	Campaign *Campaign `protobuf:"bytes,2,opt,name=campaign,oneof"`
}
type DomainObject_CourseOfAction struct {
	CourseOfAction *CourseOfAction `protobuf:"bytes,3,opt,name=course_of_action,json=courseOfAction,oneof"`
}
type DomainObject_Identity struct {
	Identity *Identity `protobuf:"bytes,4,opt,name=identity,oneof"`
}
type DomainObject_Indicator struct {
	Indicator *Indicator `protobuf:"bytes,5,opt,name=indicator,oneof"`
}
type DomainObject_IntrusionSet struct {
	IntrusionSet *IntrusionSet `protobuf:"bytes,6,opt,name=intrusion_set,json=intrusionSet,oneof"`
}
type DomainObject_Malware struct {
	Malware *Malware `protobuf:"bytes,7,opt,name=malware,oneof"`
}
type DomainObject_ObservedData struct {
	ObservedData *ObservedData `protobuf:"bytes,8,opt,name=observed_data,json=observedData,oneof"`
}
type DomainObject_Report struct {
	Report *Report `protobuf:"bytes,9,opt,name=report,oneof"`
}
type DomainObject_ThreatActor struct {
	ThreatActor *ThreatActor `protobuf:"bytes,10,opt,name=threat_actor,json=threatActor,oneof"`
}
type DomainObject_Tool struct {
	Tool *Tool `protobuf:"bytes,11,opt,name=tool,oneof"`
}
type DomainObject_Vulnerability struct {
	Vulnerability *Vulnerability `protobuf:"bytes,12,opt,name=vulnerability,oneof"`
}

func (*DomainObject_AttackPattern) isDomainObject_Object()  {}
func (*DomainObject_Campaign) isDomainObject_Object()       {}
func (*DomainObject_CourseOfAction) isDomainObject_Object() {}
func (*DomainObject_Identity) isDomainObject_Object()       {}
func (*DomainObject_Indicator) isDomainObject_Object()      {}
func (*DomainObject_IntrusionSet) isDomainObject_Object()   {}
func (*DomainObject_Malware) isDomainObject_Object()        {}
func (*DomainObject_ObservedData) isDomainObject_Object()   {}
func (*DomainObject_Report) isDomainObject_Object()         {}
func (*DomainObject_ThreatActor) isDomainObject_Object()    {}
func (*DomainObject_Tool) isDomainObject_Object()           {}
func (*DomainObject_Vulnerability) isDomainObject_Object()  {}

func (m *DomainObject) GetObject() isDomainObject_Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *DomainObject) GetAttackPattern() *AttackPattern {
	if x, ok := m.GetObject().(*DomainObject_AttackPattern); ok {
		return x.AttackPattern
	}
	return nil
}

func (m *DomainObject) GetCampaign() *Campaign {
	if x, ok := m.GetObject().(*DomainObject_Campaign); ok {
		return x.Campaign
	}
	return nil
}

func (m *DomainObject) GetCourseOfAction() *CourseOfAction {
	if x, ok := m.GetObject().(*DomainObject_CourseOfAction); ok {
		return x.CourseOfAction
	}
	return nil
}

func (m *DomainObject) GetIdentity() *Identity {
	if x, ok := m.GetObject().(*DomainObject_Identity); ok {
		return x.Identity
	}
	return nil
}

func (m *DomainObject) GetIndicator() *Indicator {
	if x, ok := m.GetObject().(*DomainObject_Indicator); ok {
		return x.Indicator
	}
	return nil
}

func (m *DomainObject) GetIntrusionSet() *IntrusionSet {
	if x, ok := m.GetObject().(*DomainObject_IntrusionSet); ok {
		return x.IntrusionSet
	}
	return nil
}

func (m *DomainObject) GetMalware() *Malware {
	if x, ok := m.GetObject().(*DomainObject_Malware); ok {
		return x.Malware
	}
	return nil
}

func (m *DomainObject) GetObservedData() *ObservedData {
	if x, ok := m.GetObject().(*DomainObject_ObservedData); ok {
		return x.ObservedData
	}
	return nil
}

func (m *DomainObject) GetReport() *Report {
	if x, ok := m.GetObject().(*DomainObject_Report); ok {
		return x.Report
	}
	return nil
}

func (m *DomainObject) GetThreatActor() *ThreatActor {
	if x, ok := m.GetObject().(*DomainObject_ThreatActor); ok {
		return x.ThreatActor
	}
	return nil
}

func (m *DomainObject) GetTool() *Tool {
	if x, ok := m.GetObject().(*DomainObject_Tool); ok {
		return x.Tool
	}
	return nil
}

func (m *DomainObject) GetVulnerability() *Vulnerability {
	if x, ok := m.GetObject().(*DomainObject_Vulnerability); ok {
		return x.Vulnerability
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DomainObject) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DomainObject_OneofMarshaler, _DomainObject_OneofUnmarshaler, _DomainObject_OneofSizer, []interface{}{
		(*DomainObject_AttackPattern)(nil),
		(*DomainObject_Campaign)(nil),
		(*DomainObject_CourseOfAction)(nil),
		(*DomainObject_Identity)(nil),
		(*DomainObject_Indicator)(nil),
		(*DomainObject_IntrusionSet)(nil),
		(*DomainObject_Malware)(nil),
		(*DomainObject_ObservedData)(nil),
		(*DomainObject_Report)(nil),
		(*DomainObject_ThreatActor)(nil),
		(*DomainObject_Tool)(nil),
		(*DomainObject_Vulnerability)(nil),
	}
}

func _DomainObject_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DomainObject)
	// object
	switch x := m.Object.(type) {
	case *DomainObject_AttackPattern:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AttackPattern); err != nil {
			return err
		}
	case *DomainObject_Campaign:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Campaign); err != nil {
			return err
		}
	case *DomainObject_CourseOfAction:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CourseOfAction); err != nil {
			return err
		}
	case *DomainObject_Identity:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Identity); err != nil {
			return err
		}
	case *DomainObject_Indicator:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Indicator); err != nil {
			return err
		}
	case *DomainObject_IntrusionSet:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IntrusionSet); err != nil {
			return err
		}
	case *DomainObject_Malware:
		_ = b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Malware); err != nil {
			return err
		}
	case *DomainObject_ObservedData:
		_ = b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ObservedData); err != nil {
			return err
		}
	case *DomainObject_Report:
		_ = b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Report); err != nil {
			return err
		}
	case *DomainObject_ThreatActor:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ThreatActor); err != nil {
			return err
		}
	case *DomainObject_Tool:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tool); err != nil {
			return err
		}
	case *DomainObject_Vulnerability:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Vulnerability); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DomainObject.Object has unexpected type %T", x)
	}
	return nil
}

func _DomainObject_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DomainObject)
	switch tag {
	case 1: // object.attack_pattern
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AttackPattern)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_AttackPattern{msg}
		return true, err
	case 2: // object.campaign
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Campaign)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_Campaign{msg}
		return true, err
	case 3: // object.course_of_action
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CourseOfAction)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_CourseOfAction{msg}
		return true, err
	case 4: // object.identity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Identity)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_Identity{msg}
		return true, err
	case 5: // object.indicator
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Indicator)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_Indicator{msg}
		return true, err
	case 6: // object.intrusion_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IntrusionSet)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_IntrusionSet{msg}
		return true, err
	case 7: // object.malware
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Malware)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_Malware{msg}
		return true, err
	case 8: // object.observed_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObservedData)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_ObservedData{msg}
		return true, err
	case 9: // object.report
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Report)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_Report{msg}
		return true, err
	case 10: // object.threat_actor
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ThreatActor)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_ThreatActor{msg}
		return true, err
	case 11: // object.tool
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Tool)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_Tool{msg}
		return true, err
	case 12: // object.vulnerability
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Vulnerability)
		err := b.DecodeMessage(msg)
		m.Object = &DomainObject_Vulnerability{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DomainObject_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DomainObject)
	// object
	switch x := m.Object.(type) {
	case *DomainObject_AttackPattern:
		s := proto.Size(x.AttackPattern)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DomainObject_Campaign:
		s := proto.Size(x.Campaign)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DomainObject_CourseOfAction:
		s := proto.Size(x.CourseOfAction)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DomainObject_Identity:
		s := proto.Size(x.Identity)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DomainObject_Indicator:
		s := proto.Size(x.Indicator)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DomainObject_IntrusionSet:
		s := proto.Size(x.IntrusionSet)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DomainObject_Malware:
		s := proto.Size(x.Malware)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DomainObject_ObservedData:
		s := proto.Size(x.ObservedData)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DomainObject_Report:
		s := proto.Size(x.Report)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DomainObject_ThreatActor:
		s := proto.Size(x.ThreatActor)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DomainObject_Tool:
		s := proto.Size(x.Tool)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DomainObject_Vulnerability:
		s := proto.Size(x.Vulnerability)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// RelationObject are edges of STIX graph.
type RelationObject struct {
	// Types that are valid to be assigned to Object:
	//	*RelationObject_Relationship
	//	*RelationObject_Sighting
	Object isRelationObject_Object `protobuf_oneof:"object"`
}

func (m *RelationObject) Reset()                    { *m = RelationObject{} }
func (m *RelationObject) String() string            { return proto.CompactTextString(m) }
func (*RelationObject) ProtoMessage()               {}
func (*RelationObject) Descriptor() ([]byte, []int) { return fileDescriptorStix, []int{21} }

type isRelationObject_Object interface {
	isRelationObject_Object()
}

type RelationObject_Relationship struct {
	Relationship *RelationShip `protobuf:"bytes,1,opt,name=relationship,oneof"`
}
type RelationObject_Sighting struct {
	Sighting *Sighting `protobuf:"bytes,2,opt,name=sighting,oneof"`
}

func (*RelationObject_Relationship) isRelationObject_Object() {}
func (*RelationObject_Sighting) isRelationObject_Object()     {}

func (m *RelationObject) GetObject() isRelationObject_Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *RelationObject) GetRelationship() *RelationShip {
	if x, ok := m.GetObject().(*RelationObject_Relationship); ok {
		return x.Relationship
	}
	return nil
}

func (m *RelationObject) GetSighting() *Sighting {
	if x, ok := m.GetObject().(*RelationObject_Sighting); ok {
		return x.Sighting
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RelationObject) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RelationObject_OneofMarshaler, _RelationObject_OneofUnmarshaler, _RelationObject_OneofSizer, []interface{}{
		(*RelationObject_Relationship)(nil),
		(*RelationObject_Sighting)(nil),
	}
}

func _RelationObject_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RelationObject)
	// object
	switch x := m.Object.(type) {
	case *RelationObject_Relationship:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Relationship); err != nil {
			return err
		}
	case *RelationObject_Sighting:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sighting); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RelationObject.Object has unexpected type %T", x)
	}
	return nil
}

func _RelationObject_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RelationObject)
	switch tag {
	case 1: // object.relationship
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RelationShip)
		err := b.DecodeMessage(msg)
		m.Object = &RelationObject_Relationship{msg}
		return true, err
	case 2: // object.sighting
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Sighting)
		err := b.DecodeMessage(msg)
		m.Object = &RelationObject_Sighting{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RelationObject_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RelationObject)
	// object
	switch x := m.Object.(type) {
	case *RelationObject_Relationship:
		s := proto.Size(x.Relationship)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RelationObject_Sighting:
		s := proto.Size(x.Sighting)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ExternalReference)(nil), "mitre.stix.v2.ExternalReference")
	proto.RegisterType((*KillChainPhase)(nil), "mitre.stix.v2.KillChainPhase")
	proto.RegisterType((*MarkingDefinition)(nil), "mitre.stix.v2.MarkingDefinition")
	proto.RegisterType((*GranularMarking)(nil), "mitre.stix.v2.GranularMarking")
	proto.RegisterType((*ObservableObject)(nil), "mitre.stix.v2.ObservableObject")
	proto.RegisterType((*AttackPattern)(nil), "mitre.stix.v2.AttackPattern")
	proto.RegisterType((*Campaign)(nil), "mitre.stix.v2.Campaign")
	proto.RegisterType((*CourseOfAction)(nil), "mitre.stix.v2.CourseOfAction")
	proto.RegisterType((*Identity)(nil), "mitre.stix.v2.Identity")
	proto.RegisterType((*Indicator)(nil), "mitre.stix.v2.Indicator")
	proto.RegisterType((*IntrusionSet)(nil), "mitre.stix.v2.IntrusionSet")
	proto.RegisterType((*Malware)(nil), "mitre.stix.v2.Malware")
	proto.RegisterType((*ObservedData)(nil), "mitre.stix.v2.ObservedData")
	proto.RegisterType((*Report)(nil), "mitre.stix.v2.Report")
	proto.RegisterType((*ThreatActor)(nil), "mitre.stix.v2.ThreatActor")
	proto.RegisterType((*Tool)(nil), "mitre.stix.v2.Tool")
	proto.RegisterType((*Vulnerability)(nil), "mitre.stix.v2.Vulnerability")
	proto.RegisterType((*RelationShip)(nil), "mitre.stix.v2.RelationShip")
	proto.RegisterType((*Sighting)(nil), "mitre.stix.v2.Sighting")
	proto.RegisterType((*Bundle)(nil), "mitre.stix.v2.Bundle")
	proto.RegisterType((*DomainObject)(nil), "mitre.stix.v2.DomainObject")
	proto.RegisterType((*RelationObject)(nil), "mitre.stix.v2.RelationObject")
}

func init() { proto.RegisterFile("pkg/protocol/mitre/stix/v2/stix.proto", fileDescriptorStix) }

var fileDescriptorStix = []byte{
	// 1825 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0xcd, 0x8f, 0x1b, 0x49,
	0x15, 0xf7, 0x78, 0x3c, 0x63, 0xfb, 0xf9, 0x63, 0x3c, 0x35, 0xb3, 0x4b, 0x6b, 0x92, 0xb0, 0x83,
	0x21, 0xd9, 0x20, 0x16, 0x8f, 0xe2, 0x28, 0xd2, 0x8a, 0x03, 0x28, 0x93, 0x04, 0x3c, 0x5a, 0x66,
	0x13, 0xda, 0x61, 0x16, 0xc1, 0x4a, 0xad, 0x72, 0x77, 0xd9, 0x2e, 0xa6, 0xdd, 0x65, 0x55, 0x95,
	0xbd, 0x19, 0xfe, 0x06, 0x4e, 0x88, 0x2b, 0x12, 0xe2, 0xc0, 0x01, 0x71, 0x44, 0xdc, 0x38, 0x83,
	0xb8, 0xf1, 0x5f, 0x70, 0xdd, 0x3b, 0x12, 0xa8, 0x5e, 0x75, 0xd9, 0xdd, 0xf6, 0x04, 0xa4, 0xbd,
	0x24, 0xc3, 0xfa, 0x64, 0xd7, 0xfb, 0xa8, 0xaf, 0xf7, 0xab, 0x57, 0xef, 0xbd, 0x6a, 0xb8, 0x3b,
	0xbd, 0x1c, 0x9d, 0x4c, 0xa5, 0xd0, 0x22, 0x14, 0xf1, 0xc9, 0x84, 0x6b, 0xc9, 0x4e, 0x94, 0xe6,
	0xaf, 0x4e, 0xe6, 0x5d, 0xfc, 0xed, 0x20, 0x8f, 0x34, 0x90, 0xd3, 0x41, 0xca, 0xbc, 0xdb, 0x1e,
	0xc1, 0xfe, 0xb3, 0x57, 0x9a, 0xc9, 0x84, 0xc6, 0x3e, 0x1b, 0x32, 0xc9, 0x92, 0x90, 0x91, 0xf7,
	0xa0, 0xa6, 0xc4, 0x4c, 0x86, 0x2c, 0x48, 0xe8, 0x84, 0x79, 0x5b, 0xc7, 0x5b, 0xf7, 0xab, 0x3e,
	0x58, 0xd2, 0xc7, 0x74, 0x82, 0x02, 0x2c, 0xd5, 0x0a, 0x78, 0xe4, 0x15, 0xad, 0x80, 0x23, 0x9d,
	0x45, 0xa4, 0x05, 0xdb, 0x33, 0x19, 0x7b, 0xdb, 0xc8, 0x30, 0x7f, 0xdb, 0x9f, 0x40, 0xf3, 0x23,
	0x1e, 0xc7, 0x4f, 0xc6, 0x94, 0x27, 0x2f, 0xc6, 0x54, 0x31, 0x72, 0x07, 0x60, 0x6a, 0xfe, 0x64,
	0x07, 0xa9, 0x22, 0x05, 0xc7, 0xb8, 0x07, 0x7b, 0x97, 0x3c, 0x8e, 0x83, 0xd0, 0x68, 0x58, 0x19,
	0x3b, 0x4e, 0xe3, 0xd2, 0xf5, 0x63, 0xe4, 0xda, 0xff, 0x28, 0xc2, 0xfe, 0x39, 0x95, 0x97, 0x3c,
	0x19, 0x3d, 0x65, 0x43, 0x9e, 0x70, 0xcd, 0x45, 0x42, 0x08, 0x94, 0xf4, 0xd5, 0xd4, 0x75, 0x8b,
	0xff, 0x49, 0x13, 0x8a, 0x8b, 0xc9, 0x16, 0x79, 0x44, 0xbe, 0x01, 0xcd, 0x50, 0x32, 0xaa, 0x59,
	0x14, 0x0c, 0xae, 0x02, 0xc9, 0x86, 0xe9, 0x7c, 0xeb, 0x29, 0xf5, 0xf4, 0xca, 0x67, 0x43, 0xe2,
	0x41, 0x39, 0x6d, 0x7b, 0x25, 0x64, 0xbb, 0x26, 0x39, 0x82, 0xca, 0x44, 0x44, 0x7c, 0xc8, 0x59,
	0xe4, 0xed, 0x20, 0x6b, 0xd1, 0x26, 0xef, 0xc3, 0x5e, 0xb4, 0x98, 0x4d, 0x80, 0x53, 0xa9, 0xa2,
	0x48, 0x73, 0x49, 0x7e, 0x69, 0x26, 0xd5, 0x87, 0xda, 0x92, 0xa2, 0x3c, 0x38, 0xde, 0xbe, 0x5f,
	0xeb, 0x3e, 0xe8, 0xe4, 0xac, 0xd4, 0x59, 0x5b, 0x5f, 0x67, 0xf9, 0x57, 0x3d, 0x4b, 0xb4, 0xbc,
	0xf2, 0xb3, 0xbd, 0x1c, 0x7d, 0x17, 0x5a, 0xab, 0x02, 0xc6, 0x24, 0x97, 0xec, 0x2a, 0xdd, 0x10,
	0xf3, 0x97, 0x1c, 0xc2, 0xce, 0x9c, 0xc6, 0x33, 0xb7, 0xaf, 0xb6, 0xf1, 0x9d, 0xe2, 0x87, 0x5b,
	0xed, 0x8f, 0x61, 0xef, 0x07, 0x92, 0x26, 0xb3, 0x98, 0xca, 0x74, 0x68, 0x63, 0xf2, 0x89, 0xfd,
	0x8b, 0x3b, 0x95, 0x62, 0x22, 0x25, 0x99, 0x7d, 0x3a, 0x82, 0x8a, 0x62, 0x31, 0x0b, 0xb5, 0x90,
	0x5e, 0xf1, 0x78, 0xdb, 0xec, 0x86, 0x6b, 0xb7, 0xef, 0x41, 0xeb, 0xf9, 0x40, 0x31, 0x39, 0xa7,
	0x83, 0x98, 0x3d, 0x1f, 0xfc, 0x9c, 0x85, 0xfa, 0x3a, 0x0b, 0xb5, 0x7f, 0x55, 0x82, 0xc6, 0x63,
	0xad, 0x69, 0x78, 0xf9, 0x82, 0x6a, 0x03, 0xa6, 0x37, 0x6e, 0x47, 0x0f, 0xca, 0x92, 0xcd, 0xc5,
	0x25, 0x8b, 0xbc, 0xdd, 0xe3, 0xad, 0xfb, 0x15, 0xdf, 0x35, 0xc9, 0xbb, 0xb0, 0x1b, 0xd3, 0x01,
	0x8b, 0x95, 0x57, 0xc6, 0xd5, 0xa6, 0x2d, 0xf2, 0x23, 0x38, 0x58, 0x9c, 0x0d, 0xe9, 0x8e, 0x94,
	0xf2, 0x2a, 0x68, 0xd8, 0xe3, 0x15, 0xc3, 0xae, 0x9d, 0x3d, 0x9f, 0xb0, 0x55, 0x92, 0x22, 0x1d,
	0x38, 0x10, 0xb8, 0x69, 0x41, 0xc6, 0x04, 0xca, 0xab, 0xe2, 0xb8, 0xfb, 0x96, 0x75, 0xbe, 0xb0,
	0x84, 0x22, 0x1f, 0xc1, 0xfe, 0x28, 0x35, 0x9f, 0xd3, 0x70, 0xc8, 0xfa, 0xea, 0xca, 0x04, 0x56,
	0xcc, 0xec, 0xb7, 0x46, 0x79, 0x82, 0x32, 0x16, 0xc0, 0xc3, 0x57, 0xb3, 0x16, 0x30, 0xff, 0xc9,
	0xb1, 0x01, 0xad, 0x0a, 0x25, 0x9f, 0x1a, 0x80, 0x79, 0x75, 0x64, 0x65, 0x49, 0xe4, 0x0c, 0xf6,
	0x33, 0xa7, 0x17, 0x4f, 0xb5, 0xf2, 0x1a, 0x38, 0x85, 0x3b, 0x2b, 0x53, 0xc8, 0xbb, 0x05, 0x7f,
	0xef, 0x32, 0xd7, 0x56, 0xed, 0x3f, 0x97, 0xa0, 0xf2, 0x84, 0x4e, 0xa6, 0x94, 0x8f, 0x36, 0x78,
	0xb8, 0xa9, 0x78, 0xf0, 0xa0, 0x4c, 0x63, 0xbe, 0x40, 0x41, 0xd5, 0x77, 0x4d, 0x73, 0x0d, 0x0c,
	0xb9, 0x54, 0x3a, 0x50, 0x8c, 0x25, 0x5e, 0xd3, 0x5e, 0x03, 0x48, 0xe9, 0x33, 0x96, 0x90, 0x5b,
	0x50, 0x8d, 0xa9, 0xe3, 0xee, 0x59, 0x6b, 0x18, 0x02, 0x32, 0x6f, 0x43, 0xd5, 0xae, 0x96, 0xcf,
	0x99, 0xd7, 0xb2, 0xaa, 0x0b, 0x42, 0xfb, 0x6f, 0xdb, 0xd0, 0x7c, 0x22, 0x66, 0x52, 0xb1, 0xe7,
	0xc3, 0xc7, 0xe1, 0x5b, 0x71, 0x2d, 0x6c, 0xe0, 0xf3, 0x85, 0xe0, 0xd3, 0xfe, 0x53, 0x09, 0x2a,
	0x67, 0x11, 0x4b, 0x34, 0xd7, 0x57, 0x1b, 0x23, 0xde, 0x50, 0x1f, 0x70, 0x17, 0x9a, 0x3c, 0xb5,
	0x61, 0x10, 0xc6, 0x54, 0x19, 0x57, 0x80, 0x01, 0x9d, 0xa3, 0x3e, 0x31, 0x44, 0xb3, 0xbd, 0x0a,
	0xc3, 0x06, 0xe5, 0x35, 0xad, 0xab, 0x48, 0x9b, 0xe4, 0x04, 0x0e, 0x42, 0x91, 0x68, 0x1a, 0xea,
	0x80, 0x27, 0x43, 0x21, 0x27, 0x14, 0x87, 0xb2, 0x5e, 0x81, 0xa4, 0xac, 0xb3, 0x25, 0xa7, 0xfd,
	0xcf, 0x12, 0x54, 0xcf, 0x92, 0x88, 0x87, 0x54, 0x0b, 0xb9, 0xc1, 0xcd, 0xcd, 0xbd, 0x3b, 0xa6,
	0x36, 0x1c, 0x4c, 0x01, 0xe3, 0x9a, 0xe6, 0xee, 0x98, 0xd3, 0x98, 0x47, 0xc1, 0x50, 0x8a, 0x89,
	0xbb, 0x3b, 0x90, 0xf2, 0x7d, 0x29, 0x26, 0x26, 0x66, 0xb5, 0xec, 0x59, 0xa2, 0x79, 0x9c, 0xe2,
	0xc4, 0x6a, 0xfc, 0xd8, 0x50, 0xae, 0x8f, 0x52, 0x5a, 0x5f, 0x28, 0x4a, 0xf9, 0xcb, 0x0e, 0xd4,
	0xcf, 0x12, 0x2d, 0x67, 0x8a, 0x8b, 0xa4, 0xcf, 0xf4, 0x06, 0x6d, 0x9b, 0x48, 0x25, 0x13, 0xa9,
	0x1c, 0xc2, 0xce, 0x48, 0xd0, 0xd8, 0xa2, 0xab, 0xea, 0xdb, 0x86, 0xf1, 0x88, 0x92, 0xa5, 0xa9,
	0x76, 0xcc, 0xe6, 0x2c, 0xf6, 0xf6, 0xad, 0x47, 0x74, 0xd4, 0x1f, 0x1a, 0x22, 0xf9, 0x36, 0x90,
	0xa9, 0xe4, 0x13, 0x2a, 0xaf, 0x82, 0x89, 0xd0, 0x7c, 0x6e, 0xdd, 0x1e, 0x41, 0xd1, 0xfd, 0x94,
	0x73, 0xbe, 0x60, 0x90, 0x87, 0xf0, 0x8e, 0x62, 0xa1, 0x48, 0xa2, 0xbc, 0x82, 0xf2, 0x0e, 0x70,
	0xec, 0xc3, 0x05, 0x73, 0xa9, 0xa3, 0xda, 0xbf, 0x2c, 0x41, 0xf9, 0x9c, 0xc6, 0x9f, 0x51, 0xc9,
	0x36, 0xd0, 0xdd, 0x24, 0x5d, 0xbf, 0xdf, 0x81, 0xba, 0x4d, 0xd9, 0x59, 0xf4, 0x94, 0x6a, 0xba,
	0xc1, 0xc4, 0x1b, 0xc7, 0xc4, 0x5d, 0x68, 0x5a, 0xf7, 0x23, 0x52, 0xbb, 0xa4, 0xe8, 0x68, 0x20,
	0xd5, 0x19, 0x8b, 0x7c, 0x1d, 0x1a, 0xe8, 0x86, 0x16, 0x52, 0x16, 0x28, 0x75, 0x43, 0x5c, 0x08,
	0xbd, 0x0f, 0x7b, 0xc9, 0x6c, 0x32, 0x60, 0x72, 0x29, 0x66, 0xae, 0x56, 0xe2, 0x37, 0x2d, 0x79,
	0x21, 0x78, 0x0a, 0x65, 0xbb, 0x2c, 0x1b, 0x8c, 0xd5, 0xba, 0xf7, 0x57, 0xe6, 0x9d, 0x05, 0x49,
	0xc7, 0x96, 0x76, 0xd2, 0x8a, 0x94, 0x53, 0x3c, 0xfa, 0x99, 0x81, 0xd2, 0x92, 0x91, 0xad, 0x44,
	0x11, 0x5b, 0x89, 0x7a, 0x94, 0xad, 0x44, 0xd5, 0xba, 0xef, 0x5d, 0x3b, 0xc6, 0xb2, 0x76, 0x94,
	0x2d, 0x55, 0xfd, 0x7b, 0x1b, 0x76, 0x7d, 0x36, 0x15, 0x72, 0x73, 0xe3, 0xde, 0x54, 0xb7, 0x75,
	0x1b, 0xaa, 0xd3, 0xd9, 0x20, 0xe6, 0x6a, 0x9c, 0xc2, 0xb0, 0xea, 0x2f, 0x09, 0x26, 0x88, 0x4b,
	0x17, 0x84, 0x0b, 0xb1, 0x29, 0x01, 0x58, 0x92, 0x59, 0x41, 0xfb, 0xf3, 0x1d, 0xa8, 0xbd, 0x1c,
	0x1b, 0xfb, 0x3c, 0x0e, 0x37, 0x61, 0xfe, 0xff, 0x63, 0xe0, 0x75, 0x08, 0x3b, 0x52, 0xc4, 0xcc,
	0x19, 0xdf, 0x36, 0x96, 0x21, 0xd5, 0x5e, 0x36, 0xa4, 0xba, 0x07, 0x4d, 0x25, 0xa6, 0x63, 0xae,
	0xb4, 0xc9, 0xfa, 0xcc, 0x50, 0xb6, 0x2e, 0xb4, 0x42, 0x7d, 0x8b, 0x42, 0x2f, 0xf2, 0x00, 0x0e,
	0xa7, 0x4c, 0x2a, 0x61, 0xcc, 0x9f, 0xd5, 0x39, 0x44, 0x9d, 0x03, 0xc7, 0xcb, 0x46, 0x6b, 0x7f,
	0x2c, 0x41, 0xe9, 0xa5, 0x10, 0xf1, 0x06, 0xec, 0x5f, 0xfa, 0x50, 0x8d, 0x7c, 0x0d, 0xea, 0x5a,
	0x88, 0x38, 0x98, 0x33, 0x69, 0x72, 0xcf, 0x34, 0x31, 0xa9, 0x19, 0xda, 0x85, 0x25, 0xb5, 0xff,
	0xba, 0x0d, 0x8d, 0x8b, 0x59, 0x9c, 0x30, 0x49, 0x07, 0x3c, 0xde, 0xd4, 0xd0, 0x6e, 0x6e, 0x21,
	0xf4, 0x37, 0x25, 0xa8, 0xfb, 0x2c, 0x46, 0x37, 0xd0, 0x1f, 0xf3, 0xe9, 0xc6, 0x90, 0x6f, 0xdc,
	0x90, 0xdf, 0x82, 0x7d, 0x99, 0x5a, 0x44, 0x8d, 0xf9, 0xd4, 0x3e, 0xf6, 0x5a, 0xab, 0xb6, 0xb2,
	0x0c, 0x7c, 0xee, 0xfd, 0xdf, 0x9e, 0xe1, 0x0e, 0xa4, 0x2f, 0xed, 0x68, 0xa8, 0x34, 0x1c, 0xb2,
	0x14, 0x63, 0xa5, 0x3b, 0x00, 0x9a, 0xca, 0x11, 0xc3, 0x70, 0xc8, 0x15, 0x21, 0x2c, 0xc5, 0x67,
	0xc3, 0xf6, 0xbf, 0x4a, 0x50, 0xe9, 0xf3, 0xd1, 0x58, 0xf3, 0x64, 0xb4, 0xc1, 0xc6, 0x1b, 0xc7,
	0x46, 0xbe, 0x64, 0x54, 0xfb, 0xaf, 0x25, 0xa3, 0xfa, 0x7a, 0xc9, 0x28, 0x14, 0xb3, 0x44, 0xa7,
	0x99, 0x99, 0x6d, 0x90, 0x7b, 0xb0, 0xa7, 0x52, 0xfb, 0x06, 0x62, 0x98, 0x01, 0x41, 0xc3, 0x91,
	0x9f, 0x0f, 0x8d, 0xc5, 0x3e, 0x00, 0xe2, 0x52, 0xbb, 0x20, 0xa2, 0x9a, 0xda, 0x55, 0xdb, 0x50,
	0xa9, 0x25, 0x32, 0x49, 0x1b, 0x2e, 0xfa, 0x03, 0x20, 0x9f, 0x8d, 0x99, 0x64, 0x01, 0x76, 0xc2,
	0x22, 0x2b, 0x6d, 0x6b, 0x55, 0x2d, 0xe4, 0xf4, 0x2d, 0x03, 0xa5, 0x3d, 0x28, 0xab, 0xd9, 0xc4,
	0x84, 0x3e, 0x18, 0x34, 0x55, 0x7c, 0xd7, 0x6c, 0xff, 0xb6, 0x08, 0xbb, 0xa7, 0xb3, 0x24, 0x8a,
	0x19, 0x79, 0x08, 0x25, 0x15, 0x09, 0xe5, 0x6d, 0xe1, 0xd6, 0xad, 0xa6, 0x74, 0x56, 0xa8, 0xd3,
	0x8f, 0x44, 0x9a, 0x2d, 0xa2, 0x30, 0x2a, 0x49, 0xa1, 0xf0, 0x03, 0x82, 0xd7, 0x2b, 0xc9, 0xa5,
	0x92, 0x14, 0xea, 0xe8, 0x25, 0x54, 0x17, 0xfd, 0x5c, 0xf3, 0x99, 0xc3, 0x83, 0x7c, 0x72, 0x79,
	0x6b, 0xa5, 0xd3, 0xa7, 0x62, 0x42, 0x79, 0xb2, 0x96, 0x58, 0x1e, 0x5d, 0x40, 0x75, 0x31, 0xd0,
	0x35, 0xbd, 0x3e, 0xcc, 0xf7, 0xba, 0x7a, 0x69, 0x3b, 0x1f, 0xbd, 0x9e, 0xb0, 0x7e, 0xbe, 0x03,
	0xf5, 0xec, 0x98, 0xe4, 0x19, 0x34, 0x29, 0x7e, 0xf3, 0x10, 0xb8, 0x2a, 0xf7, 0x16, 0x76, 0x79,
	0x7b, 0xa5, 0xcb, 0xdc, 0x87, 0x11, 0xbd, 0x82, 0xdf, 0xa0, 0xb9, 0x2f, 0x25, 0x1e, 0x41, 0x25,
	0x4c, 0x5f, 0xc9, 0xd3, 0x39, 0x7d, 0x65, 0xa5, 0x03, 0xf7, 0x88, 0xde, 0x2b, 0xf8, 0x0b, 0x51,
	0x72, 0x06, 0xad, 0x10, 0xdf, 0x48, 0x0d, 0x9a, 0x28, 0xbe, 0x92, 0xa2, 0x07, 0x58, 0x5f, 0x52,
	0xfe, 0x29, 0xb5, 0x57, 0xf0, 0x9b, 0x61, 0xfe, 0x71, 0xf5, 0x11, 0x54, 0xdc, 0x4b, 0x0e, 0x7a,
	0x89, 0xf5, 0x19, 0xb8, 0x27, 0x3c, 0x33, 0x03, 0x27, 0x4a, 0x3e, 0x84, 0x2a, 0x77, 0x6f, 0x34,
	0xe8, 0x42, 0x6a, 0x5d, 0x6f, 0x55, 0xcf, 0xf1, 0x7b, 0x05, 0x7f, 0x29, 0x4c, 0x4e, 0xa1, 0xc1,
	0x5d, 0xc9, 0x3d, 0x50, 0x4c, 0xa3, 0x97, 0x59, 0xb7, 0x70, 0xb6, 0x2c, 0xdf, 0x2b, 0xf8, 0x75,
	0x9e, 0x2d, 0xd3, 0x77, 0xa1, 0x3c, 0xb1, 0x65, 0x4f, 0xaf, 0x8c, 0xda, 0xef, 0xae, 0x7d, 0x7b,
	0x83, 0xdc, 0x5e, 0xc1, 0x77, 0x82, 0x66, 0xdc, 0xdc, 0xd9, 0xf2, 0x2a, 0xd7, 0x8e, 0x9b, 0x2d,
	0x8d, 0x98, 0x71, 0xb3, 0xa7, 0x8e, 0x9c, 0xc0, 0xae, 0xc4, 0xb2, 0x05, 0x7e, 0x17, 0x54, 0xeb,
	0xbe, 0xb3, 0x06, 0x20, 0xc3, 0xec, 0x15, 0xfc, 0x54, 0x8c, 0x7c, 0x0f, 0xea, 0x1a, 0xb3, 0x5c,
	0x63, 0x25, 0x21, 0x3d, 0x40, 0xb5, 0xa3, 0x15, 0xb5, 0x4c, 0x22, 0xdc, 0x2b, 0xf8, 0x35, 0x9d,
	0xc9, 0x8b, 0xbf, 0x09, 0x25, 0x13, 0x13, 0xa2, 0x17, 0xaa, 0x75, 0x0f, 0x56, 0x15, 0x85, 0x88,
	0x7b, 0x05, 0x1f, 0x45, 0xc8, 0x53, 0x68, 0xcc, 0xb3, 0xe1, 0x22, 0xfa, 0xa6, 0x75, 0x44, 0xe6,
	0x42, 0x4a, 0x83, 0xc8, 0x9c, 0xd2, 0x69, 0x05, 0x76, 0xad, 0x7b, 0x6d, 0xff, 0x7a, 0x0b, 0x9a,
	0xf9, 0x13, 0x41, 0x1e, 0x43, 0x3d, 0x7b, 0x39, 0xa6, 0x98, 0xbf, 0xf5, 0x9a, 0x63, 0x64, 0x42,
	0x1d, 0xb3, 0x85, 0x59, 0x15, 0x83, 0x37, 0xe7, 0xf3, 0x5e, 0x83, 0x78, 0x77, 0x13, 0x1a, 0xbc,
	0x39, 0xd1, 0xe5, 0xb4, 0x4e, 0x3f, 0x81, 0x23, 0x21, 0x47, 0x9d, 0x5f, 0xb0, 0x84, 0xeb, 0x31,
	0x95, 0x79, 0xe5, 0xd3, 0x6a, 0x5f, 0xf3, 0x57, 0x2f, 0xa4, 0xd0, 0xe2, 0xc5, 0xd6, 0x4f, 0x77,
	0x0d, 0x75, 0xde, 0xfd, 0x5d, 0x71, 0xfb, 0xbc, 0xff, 0x93, 0x3f, 0x14, 0x1b, 0xe7, 0x28, 0x6a,
	0x24, 0x3a, 0x17, 0xdd, 0xbf, 0xa7, 0xed, 0x4f, 0x4d, 0xfb, 0xd3, 0x8b, 0xee, 0x60, 0x17, 0xbf,
	0xb5, 0x7b, 0xf8, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x91, 0xcf, 0x67, 0x9c, 0x94, 0x27, 0x00,
	0x00,
}
