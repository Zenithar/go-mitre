// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/protocol/mitre/stix/v2/observable.proto

/*
Package stixv2 is a generated protocol buffer package.

It is generated from these files:
	pkg/protocol/mitre/stix/v2/observable.proto
	pkg/protocol/mitre/stix/v2/stix.proto

It has these top-level messages:
	ArtifactObject
	AutonomousSystemObject
	DirectoryObject
	DomainNameObject
	EmailAddressObject
	EmailMessageObject
	EmailHeaderComponent
	EmailMIMEPartComponent
	FileObject
	IPv4AddressObject
	IPv6AddressObject
	MacAddressObject
	MutexObject
	NetworkTrafficObject
	ProcessObject
	SoftwareObject
	URLObject
	UserAccountObject
	WindowsRegistryKeyObject
	X509CertificateObject
	ExternalReference
	KillChainPhase
	MarkingDefinition
	GranularMarking
	ObservableObject
	AttackPattern
	Campaign
	CourseOfAction
	Identity
	Indicator
	IntrusionSet
	Malware
	ObservedData
	Report
	ThreatActor
	Tool
	Vulnerability
	RelationShip
	Sighting
	Bundle
	DomainObject
	RelationObject
*/
package stixv2

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// The Artifact Object permits capturing an array of bytes (8-bits), as a base64-encoded
// string, or linking to a file-like payload.
type ArtifactObject struct {
	Type       string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions []string          `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	MimeType   string            `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	PayloadBin []byte            `protobuf:"bytes,4,opt,name=payload_bin,json=payloadBin,proto3" json:"payload_bin,omitempty"`
	Url        string            `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Hashes     map[string]string `protobuf:"bytes,6,rep,name=hashes" json:"hashes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *ArtifactObject) Reset()                    { *m = ArtifactObject{} }
func (m *ArtifactObject) String() string            { return proto.CompactTextString(m) }
func (*ArtifactObject) ProtoMessage()               {}
func (*ArtifactObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{0} }

func (m *ArtifactObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ArtifactObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *ArtifactObject) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *ArtifactObject) GetPayloadBin() []byte {
	if m != nil {
		return m.PayloadBin
	}
	return nil
}

func (m *ArtifactObject) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ArtifactObject) GetHashes() map[string]string {
	if m != nil {
		return m.Hashes
	}
	return nil
}

// The AS object represents the properties of an Autonomous System (AS).
type AutonomousSystemObject struct {
	Type       string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Number     int64    `protobuf:"zigzag64,3,opt,name=number,proto3" json:"number,omitempty"`
	Name       string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Rir        string   `protobuf:"bytes,5,opt,name=rir,proto3" json:"rir,omitempty"`
}

func (m *AutonomousSystemObject) Reset()                    { *m = AutonomousSystemObject{} }
func (m *AutonomousSystemObject) String() string            { return proto.CompactTextString(m) }
func (*AutonomousSystemObject) ProtoMessage()               {}
func (*AutonomousSystemObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{1} }

func (m *AutonomousSystemObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AutonomousSystemObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *AutonomousSystemObject) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *AutonomousSystemObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AutonomousSystemObject) GetRir() string {
	if m != nil {
		return m.Rir
	}
	return ""
}

// The Directory Object represents the properties common to a file system directory.
type DirectoryObject struct {
	Type         string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions   []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Path         string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	PathEnc      string   `protobuf:"bytes,4,opt,name=path_enc,json=pathEnc,proto3" json:"path_enc,omitempty"`
	Created      string   `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	Modified     string   `protobuf:"bytes,6,opt,name=modified,proto3" json:"modified,omitempty"`
	Accessed     string   `protobuf:"bytes,7,opt,name=accessed,proto3" json:"accessed,omitempty"`
	ContainsRefs []string `protobuf:"bytes,8,rep,name=contains_refs,json=containsRefs" json:"contains_refs,omitempty"`
}

func (m *DirectoryObject) Reset()                    { *m = DirectoryObject{} }
func (m *DirectoryObject) String() string            { return proto.CompactTextString(m) }
func (*DirectoryObject) ProtoMessage()               {}
func (*DirectoryObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{2} }

func (m *DirectoryObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DirectoryObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *DirectoryObject) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *DirectoryObject) GetPathEnc() string {
	if m != nil {
		return m.PathEnc
	}
	return ""
}

func (m *DirectoryObject) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *DirectoryObject) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *DirectoryObject) GetAccessed() string {
	if m != nil {
		return m.Accessed
	}
	return ""
}

func (m *DirectoryObject) GetContainsRefs() []string {
	if m != nil {
		return m.ContainsRefs
	}
	return nil
}

// The Domain Name represents the properties of a network domain name.
type DomainNameObject struct {
	Type           string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions     []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Value          string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	ResolvesToRefs []string `protobuf:"bytes,4,rep,name=resolves_to_refs,json=resolvesToRefs" json:"resolves_to_refs,omitempty"`
}

func (m *DomainNameObject) Reset()                    { *m = DomainNameObject{} }
func (m *DomainNameObject) String() string            { return proto.CompactTextString(m) }
func (*DomainNameObject) ProtoMessage()               {}
func (*DomainNameObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{3} }

func (m *DomainNameObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DomainNameObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *DomainNameObject) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *DomainNameObject) GetResolvesToRefs() []string {
	if m != nil {
		return m.ResolvesToRefs
	}
	return nil
}

// The Email Address Object represents a single email address.
type EmailAddressObject struct {
	Type         string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions   []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Value        string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	DisplayName  string   `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	BelongsToRef string   `protobuf:"bytes,5,opt,name=belongs_to_ref,json=belongsToRef,proto3" json:"belongs_to_ref,omitempty"`
}

func (m *EmailAddressObject) Reset()                    { *m = EmailAddressObject{} }
func (m *EmailAddressObject) String() string            { return proto.CompactTextString(m) }
func (*EmailAddressObject) ProtoMessage()               {}
func (*EmailAddressObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{4} }

func (m *EmailAddressObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EmailAddressObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *EmailAddressObject) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *EmailAddressObject) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *EmailAddressObject) GetBelongsToRef() string {
	if m != nil {
		return m.BelongsToRef
	}
	return ""
}

// The Email Message Object represents an instance of an email message,
// corresponding to the internet message format described in [RFC5322]
// and related RFCs.
type EmailMessageObject struct {
	Type                    string                    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions              []string                  `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	IsMultipart             bool                      `protobuf:"varint,3,opt,name=is_multipart,json=isMultipart,proto3" json:"is_multipart,omitempty"`
	Date                    string                    `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	ContentType             string                    `protobuf:"bytes,5,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	FromRef                 string                    `protobuf:"bytes,6,opt,name=from_ref,json=fromRef,proto3" json:"from_ref,omitempty"`
	SenderRef               string                    `protobuf:"bytes,7,opt,name=sender_ref,json=senderRef,proto3" json:"sender_ref,omitempty"`
	ToRefs                  []string                  `protobuf:"bytes,8,rep,name=to_refs,json=toRefs" json:"to_refs,omitempty"`
	CcRefs                  []string                  `protobuf:"bytes,9,rep,name=cc_refs,json=ccRefs" json:"cc_refs,omitempty"`
	BccRefs                 []string                  `protobuf:"bytes,10,rep,name=bcc_refs,json=bccRefs" json:"bcc_refs,omitempty"`
	Subject                 string                    `protobuf:"bytes,11,opt,name=subject,proto3" json:"subject,omitempty"`
	ReceivedLines           []string                  `protobuf:"bytes,12,rep,name=received_lines,json=receivedLines" json:"received_lines,omitempty"`
	AdditionalHeadersFields []*EmailHeaderComponent   `protobuf:"bytes,13,rep,name=additional_headers_fields,json=additionalHeadersFields" json:"additional_headers_fields,omitempty"`
	Body                    string                    `protobuf:"bytes,14,opt,name=body,proto3" json:"body,omitempty"`
	BodyMultipart           []*EmailMIMEPartComponent `protobuf:"bytes,15,rep,name=body_multipart,json=bodyMultipart" json:"body_multipart,omitempty"`
	RawEmailRef             string                    `protobuf:"bytes,16,opt,name=raw_email_ref,json=rawEmailRef,proto3" json:"raw_email_ref,omitempty"`
}

func (m *EmailMessageObject) Reset()                    { *m = EmailMessageObject{} }
func (m *EmailMessageObject) String() string            { return proto.CompactTextString(m) }
func (*EmailMessageObject) ProtoMessage()               {}
func (*EmailMessageObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{5} }

func (m *EmailMessageObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EmailMessageObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *EmailMessageObject) GetIsMultipart() bool {
	if m != nil {
		return m.IsMultipart
	}
	return false
}

func (m *EmailMessageObject) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *EmailMessageObject) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *EmailMessageObject) GetFromRef() string {
	if m != nil {
		return m.FromRef
	}
	return ""
}

func (m *EmailMessageObject) GetSenderRef() string {
	if m != nil {
		return m.SenderRef
	}
	return ""
}

func (m *EmailMessageObject) GetToRefs() []string {
	if m != nil {
		return m.ToRefs
	}
	return nil
}

func (m *EmailMessageObject) GetCcRefs() []string {
	if m != nil {
		return m.CcRefs
	}
	return nil
}

func (m *EmailMessageObject) GetBccRefs() []string {
	if m != nil {
		return m.BccRefs
	}
	return nil
}

func (m *EmailMessageObject) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *EmailMessageObject) GetReceivedLines() []string {
	if m != nil {
		return m.ReceivedLines
	}
	return nil
}

func (m *EmailMessageObject) GetAdditionalHeadersFields() []*EmailHeaderComponent {
	if m != nil {
		return m.AdditionalHeadersFields
	}
	return nil
}

func (m *EmailMessageObject) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *EmailMessageObject) GetBodyMultipart() []*EmailMIMEPartComponent {
	if m != nil {
		return m.BodyMultipart
	}
	return nil
}

func (m *EmailMessageObject) GetRawEmailRef() string {
	if m != nil {
		return m.RawEmailRef
	}
	return ""
}

// EmailHeaderComponent defines additional headers component for Email Object.
type EmailHeaderComponent struct {
	Key   string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Items []string `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *EmailHeaderComponent) Reset()                    { *m = EmailHeaderComponent{} }
func (m *EmailHeaderComponent) String() string            { return proto.CompactTextString(m) }
func (*EmailHeaderComponent) ProtoMessage()               {}
func (*EmailHeaderComponent) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{6} }

func (m *EmailHeaderComponent) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *EmailHeaderComponent) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

// Specifies one component of a multi-part email body.
type EmailMIMEPartComponent struct {
	Body               string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	BodyRawRef         string `protobuf:"bytes,2,opt,name=body_raw_ref,json=bodyRawRef,proto3" json:"body_raw_ref,omitempty"`
	ContentType        string `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	ContentDisposition string `protobuf:"bytes,4,opt,name=content_disposition,json=contentDisposition,proto3" json:"content_disposition,omitempty"`
}

func (m *EmailMIMEPartComponent) Reset()                    { *m = EmailMIMEPartComponent{} }
func (m *EmailMIMEPartComponent) String() string            { return proto.CompactTextString(m) }
func (*EmailMIMEPartComponent) ProtoMessage()               {}
func (*EmailMIMEPartComponent) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{7} }

func (m *EmailMIMEPartComponent) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *EmailMIMEPartComponent) GetBodyRawRef() string {
	if m != nil {
		return m.BodyRawRef
	}
	return ""
}

func (m *EmailMIMEPartComponent) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *EmailMIMEPartComponent) GetContentDisposition() string {
	if m != nil {
		return m.ContentDisposition
	}
	return ""
}

//  The File Object represents the properties of a file.
type FileObject struct {
	Type                string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions          []string          `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Hashes              map[string]string `protobuf:"bytes,3,rep,name=hashes" json:"hashes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Size_               int64             `protobuf:"zigzag64,4,opt,name=size,proto3" json:"size,omitempty"`
	Name                string            `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	NameEnc             string            `protobuf:"bytes,6,opt,name=name_enc,json=nameEnc,proto3" json:"name_enc,omitempty"`
	MagicNumberHex      string            `protobuf:"bytes,7,opt,name=magic_number_hex,json=magicNumberHex,proto3" json:"magic_number_hex,omitempty"`
	MimeType            string            `protobuf:"bytes,8,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Created             string            `protobuf:"bytes,9,opt,name=created,proto3" json:"created,omitempty"`
	Modified            string            `protobuf:"bytes,10,opt,name=modified,proto3" json:"modified,omitempty"`
	Accessed            string            `protobuf:"bytes,11,opt,name=accessed,proto3" json:"accessed,omitempty"`
	ParentDirectoryRef  string            `protobuf:"bytes,12,opt,name=parent_directory_ref,json=parentDirectoryRef,proto3" json:"parent_directory_ref,omitempty"`
	IsEncrypted         bool              `protobuf:"varint,13,opt,name=is_encrypted,json=isEncrypted,proto3" json:"is_encrypted,omitempty"`
	EncryptionAlgorithm string            `protobuf:"bytes,14,opt,name=encryption_algorithm,json=encryptionAlgorithm,proto3" json:"encryption_algorithm,omitempty"`
	DecryptionKey       string            `protobuf:"bytes,15,opt,name=decryption_key,json=decryptionKey,proto3" json:"decryption_key,omitempty"`
	ContainsRefs        []string          `protobuf:"bytes,16,rep,name=contains_refs,json=containsRefs" json:"contains_refs,omitempty"`
	ContentRef          string            `protobuf:"bytes,17,opt,name=content_ref,json=contentRef,proto3" json:"content_ref,omitempty"`
}

func (m *FileObject) Reset()                    { *m = FileObject{} }
func (m *FileObject) String() string            { return proto.CompactTextString(m) }
func (*FileObject) ProtoMessage()               {}
func (*FileObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{8} }

func (m *FileObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FileObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *FileObject) GetHashes() map[string]string {
	if m != nil {
		return m.Hashes
	}
	return nil
}

func (m *FileObject) GetSize_() int64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *FileObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileObject) GetNameEnc() string {
	if m != nil {
		return m.NameEnc
	}
	return ""
}

func (m *FileObject) GetMagicNumberHex() string {
	if m != nil {
		return m.MagicNumberHex
	}
	return ""
}

func (m *FileObject) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *FileObject) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *FileObject) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *FileObject) GetAccessed() string {
	if m != nil {
		return m.Accessed
	}
	return ""
}

func (m *FileObject) GetParentDirectoryRef() string {
	if m != nil {
		return m.ParentDirectoryRef
	}
	return ""
}

func (m *FileObject) GetIsEncrypted() bool {
	if m != nil {
		return m.IsEncrypted
	}
	return false
}

func (m *FileObject) GetEncryptionAlgorithm() string {
	if m != nil {
		return m.EncryptionAlgorithm
	}
	return ""
}

func (m *FileObject) GetDecryptionKey() string {
	if m != nil {
		return m.DecryptionKey
	}
	return ""
}

func (m *FileObject) GetContainsRefs() []string {
	if m != nil {
		return m.ContainsRefs
	}
	return nil
}

func (m *FileObject) GetContentRef() string {
	if m != nil {
		return m.ContentRef
	}
	return ""
}

// The IPv4 Address Object represents one or more IPv4
// addresses expressed using CIDR notation.
type IPv4AddressObject struct {
	Type           string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions     []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Value          string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	ResolvesToRefs []string `protobuf:"bytes,4,rep,name=resolves_to_refs,json=resolvesToRefs" json:"resolves_to_refs,omitempty"`
	BelongsToRefs  []string `protobuf:"bytes,5,rep,name=belongs_to_refs,json=belongsToRefs" json:"belongs_to_refs,omitempty"`
}

func (m *IPv4AddressObject) Reset()                    { *m = IPv4AddressObject{} }
func (m *IPv4AddressObject) String() string            { return proto.CompactTextString(m) }
func (*IPv4AddressObject) ProtoMessage()               {}
func (*IPv4AddressObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{9} }

func (m *IPv4AddressObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *IPv4AddressObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *IPv4AddressObject) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *IPv4AddressObject) GetResolvesToRefs() []string {
	if m != nil {
		return m.ResolvesToRefs
	}
	return nil
}

func (m *IPv4AddressObject) GetBelongsToRefs() []string {
	if m != nil {
		return m.BelongsToRefs
	}
	return nil
}

// The IPv6 Address Object represents one or more IPv6
// addresses expressed using CIDR notation.
type IPv6AddressObject struct {
	Type           string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions     []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Value          string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	ResolvesToRefs []string `protobuf:"bytes,4,rep,name=resolves_to_refs,json=resolvesToRefs" json:"resolves_to_refs,omitempty"`
	BelongsToRefs  []string `protobuf:"bytes,5,rep,name=belongs_to_refs,json=belongsToRefs" json:"belongs_to_refs,omitempty"`
}

func (m *IPv6AddressObject) Reset()                    { *m = IPv6AddressObject{} }
func (m *IPv6AddressObject) String() string            { return proto.CompactTextString(m) }
func (*IPv6AddressObject) ProtoMessage()               {}
func (*IPv6AddressObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{10} }

func (m *IPv6AddressObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *IPv6AddressObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *IPv6AddressObject) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *IPv6AddressObject) GetResolvesToRefs() []string {
	if m != nil {
		return m.ResolvesToRefs
	}
	return nil
}

func (m *IPv6AddressObject) GetBelongsToRefs() []string {
	if m != nil {
		return m.BelongsToRefs
	}
	return nil
}

// The MAC Address Object represents a single Media Access
// Control (MAC) address.
type MacAddressObject struct {
	Type       string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Value      string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *MacAddressObject) Reset()                    { *m = MacAddressObject{} }
func (m *MacAddressObject) String() string            { return proto.CompactTextString(m) }
func (*MacAddressObject) ProtoMessage()               {}
func (*MacAddressObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{11} }

func (m *MacAddressObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MacAddressObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *MacAddressObject) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// The Mutex Object represents the properties of a mutual
// exclusion (mutex) object.
type MutexObject struct {
	Type       string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Name       string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MutexObject) Reset()                    { *m = MutexObject{} }
func (m *MutexObject) String() string            { return proto.CompactTextString(m) }
func (*MutexObject) ProtoMessage()               {}
func (*MutexObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{12} }

func (m *MutexObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MutexObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *MutexObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The Network Traffic Object represents arbitrary network
// traffic that originates from a source and is addressed
// to a destination.
type NetworkTrafficObject struct {
	Type              string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions        []string          `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Start             string            `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End               string            `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	IsActive          bool              `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	SrcRef            string            `protobuf:"bytes,6,opt,name=src_ref,json=srcRef,proto3" json:"src_ref,omitempty"`
	DstRef            string            `protobuf:"bytes,7,opt,name=dst_ref,json=dstRef,proto3" json:"dst_ref,omitempty"`
	SrcPort           int32             `protobuf:"zigzag32,8,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort           int32             `protobuf:"zigzag32,9,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	Protocols         []string          `protobuf:"bytes,10,rep,name=protocols" json:"protocols,omitempty"`
	SrcByteCount      int64             `protobuf:"zigzag64,11,opt,name=src_byte_count,json=srcByteCount,proto3" json:"src_byte_count,omitempty"`
	DstByteCount      int64             `protobuf:"zigzag64,12,opt,name=dst_byte_count,json=dstByteCount,proto3" json:"dst_byte_count,omitempty"`
	SrcPackets        int64             `protobuf:"zigzag64,13,opt,name=src_packets,json=srcPackets,proto3" json:"src_packets,omitempty"`
	DstPackets        int64             `protobuf:"zigzag64,14,opt,name=dst_packets,json=dstPackets,proto3" json:"dst_packets,omitempty"`
	Ipfix             map[string]string `protobuf:"bytes,15,rep,name=ipfix" json:"ipfix,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SrcPayloadRef     string            `protobuf:"bytes,16,opt,name=src_payload_ref,json=srcPayloadRef,proto3" json:"src_payload_ref,omitempty"`
	DstPayloadRef     string            `protobuf:"bytes,17,opt,name=dst_payload_ref,json=dstPayloadRef,proto3" json:"dst_payload_ref,omitempty"`
	EncapsulatesRefs  []string          `protobuf:"bytes,18,rep,name=encapsulates_refs,json=encapsulatesRefs" json:"encapsulates_refs,omitempty"`
	EncapsulatedByRef string            `protobuf:"bytes,19,opt,name=encapsulated_by_ref,json=encapsulatedByRef,proto3" json:"encapsulated_by_ref,omitempty"`
}

func (m *NetworkTrafficObject) Reset()                    { *m = NetworkTrafficObject{} }
func (m *NetworkTrafficObject) String() string            { return proto.CompactTextString(m) }
func (*NetworkTrafficObject) ProtoMessage()               {}
func (*NetworkTrafficObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{13} }

func (m *NetworkTrafficObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NetworkTrafficObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *NetworkTrafficObject) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *NetworkTrafficObject) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *NetworkTrafficObject) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *NetworkTrafficObject) GetSrcRef() string {
	if m != nil {
		return m.SrcRef
	}
	return ""
}

func (m *NetworkTrafficObject) GetDstRef() string {
	if m != nil {
		return m.DstRef
	}
	return ""
}

func (m *NetworkTrafficObject) GetSrcPort() int32 {
	if m != nil {
		return m.SrcPort
	}
	return 0
}

func (m *NetworkTrafficObject) GetDstPort() int32 {
	if m != nil {
		return m.DstPort
	}
	return 0
}

func (m *NetworkTrafficObject) GetProtocols() []string {
	if m != nil {
		return m.Protocols
	}
	return nil
}

func (m *NetworkTrafficObject) GetSrcByteCount() int64 {
	if m != nil {
		return m.SrcByteCount
	}
	return 0
}

func (m *NetworkTrafficObject) GetDstByteCount() int64 {
	if m != nil {
		return m.DstByteCount
	}
	return 0
}

func (m *NetworkTrafficObject) GetSrcPackets() int64 {
	if m != nil {
		return m.SrcPackets
	}
	return 0
}

func (m *NetworkTrafficObject) GetDstPackets() int64 {
	if m != nil {
		return m.DstPackets
	}
	return 0
}

func (m *NetworkTrafficObject) GetIpfix() map[string]string {
	if m != nil {
		return m.Ipfix
	}
	return nil
}

func (m *NetworkTrafficObject) GetSrcPayloadRef() string {
	if m != nil {
		return m.SrcPayloadRef
	}
	return ""
}

func (m *NetworkTrafficObject) GetDstPayloadRef() string {
	if m != nil {
		return m.DstPayloadRef
	}
	return ""
}

func (m *NetworkTrafficObject) GetEncapsulatesRefs() []string {
	if m != nil {
		return m.EncapsulatesRefs
	}
	return nil
}

func (m *NetworkTrafficObject) GetEncapsulatedByRef() string {
	if m != nil {
		return m.EncapsulatedByRef
	}
	return ""
}

// The Process Object represents common properties of an instance
// of a computer program as executed on an operating system.
type ProcessObject struct {
	Type                 string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions           []string          `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	IsHidden             bool              `protobuf:"varint,3,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`
	Pid                  int64             `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Name                 string            `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Created              string            `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	Cwd                  string            `protobuf:"bytes,7,opt,name=cwd,proto3" json:"cwd,omitempty"`
	Arguments            []string          `protobuf:"bytes,8,rep,name=arguments" json:"arguments,omitempty"`
	CommandLine          string            `protobuf:"bytes,9,opt,name=command_line,json=commandLine,proto3" json:"command_line,omitempty"`
	EnvironmentVariables map[string]string `protobuf:"bytes,10,rep,name=environment_variables,json=environmentVariables" json:"environment_variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OpenedConnectionRefs []string          `protobuf:"bytes,11,rep,name=opened_connection_refs,json=openedConnectionRefs" json:"opened_connection_refs,omitempty"`
	CreatorUserRef       string            `protobuf:"bytes,12,opt,name=creator_user_ref,json=creatorUserRef,proto3" json:"creator_user_ref,omitempty"`
	BinaryRef            string            `protobuf:"bytes,13,opt,name=binary_ref,json=binaryRef,proto3" json:"binary_ref,omitempty"`
	ParentRef            string            `protobuf:"bytes,14,opt,name=parent_ref,json=parentRef,proto3" json:"parent_ref,omitempty"`
	ChildRefs            []string          `protobuf:"bytes,15,rep,name=child_refs,json=childRefs" json:"child_refs,omitempty"`
}

func (m *ProcessObject) Reset()                    { *m = ProcessObject{} }
func (m *ProcessObject) String() string            { return proto.CompactTextString(m) }
func (*ProcessObject) ProtoMessage()               {}
func (*ProcessObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{14} }

func (m *ProcessObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ProcessObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *ProcessObject) GetIsHidden() bool {
	if m != nil {
		return m.IsHidden
	}
	return false
}

func (m *ProcessObject) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ProcessObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProcessObject) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *ProcessObject) GetCwd() string {
	if m != nil {
		return m.Cwd
	}
	return ""
}

func (m *ProcessObject) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *ProcessObject) GetCommandLine() string {
	if m != nil {
		return m.CommandLine
	}
	return ""
}

func (m *ProcessObject) GetEnvironmentVariables() map[string]string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

func (m *ProcessObject) GetOpenedConnectionRefs() []string {
	if m != nil {
		return m.OpenedConnectionRefs
	}
	return nil
}

func (m *ProcessObject) GetCreatorUserRef() string {
	if m != nil {
		return m.CreatorUserRef
	}
	return ""
}

func (m *ProcessObject) GetBinaryRef() string {
	if m != nil {
		return m.BinaryRef
	}
	return ""
}

func (m *ProcessObject) GetParentRef() string {
	if m != nil {
		return m.ParentRef
	}
	return ""
}

func (m *ProcessObject) GetChildRefs() []string {
	if m != nil {
		return m.ChildRefs
	}
	return nil
}

// The Software Object represents high-level properties
// associated with software, including software products.
type SoftwareObject struct {
	Type       string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Name       string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Cpe        string   `protobuf:"bytes,4,opt,name=cpe,proto3" json:"cpe,omitempty"`
	Languages  []string `protobuf:"bytes,5,rep,name=languages" json:"languages,omitempty"`
	Vendor     string   `protobuf:"bytes,6,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Version    string   `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
}

func (m *SoftwareObject) Reset()                    { *m = SoftwareObject{} }
func (m *SoftwareObject) String() string            { return proto.CompactTextString(m) }
func (*SoftwareObject) ProtoMessage()               {}
func (*SoftwareObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{15} }

func (m *SoftwareObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SoftwareObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *SoftwareObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SoftwareObject) GetCpe() string {
	if m != nil {
		return m.Cpe
	}
	return ""
}

func (m *SoftwareObject) GetLanguages() []string {
	if m != nil {
		return m.Languages
	}
	return nil
}

func (m *SoftwareObject) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *SoftwareObject) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// The URL Object represents the properties of a uniform
// resource locator (URL).
type URLObject struct {
	Type       string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Value      string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *URLObject) Reset()                    { *m = URLObject{} }
func (m *URLObject) String() string            { return proto.CompactTextString(m) }
func (*URLObject) ProtoMessage()               {}
func (*URLObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{16} }

func (m *URLObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *URLObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *URLObject) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// The User Account Object represents an instance of any
// type of user account, including but not limited to operating
// system, device, messaging service, and social media platform
// accounts.
type UserAccountObject struct {
	Type                string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions          []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	UserId              string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountLogin        string   `protobuf:"bytes,4,opt,name=account_login,json=accountLogin,proto3" json:"account_login,omitempty"`
	AccountType         string   `protobuf:"bytes,5,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	DisplayName         string   `protobuf:"bytes,6,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	IsServiceAccount    bool     `protobuf:"varint,7,opt,name=is_service_account,json=isServiceAccount,proto3" json:"is_service_account,omitempty"`
	IsPrivileged        bool     `protobuf:"varint,8,opt,name=is_privileged,json=isPrivileged,proto3" json:"is_privileged,omitempty"`
	CanEscalatePrivs    bool     `protobuf:"varint,9,opt,name=can_escalate_privs,json=canEscalatePrivs,proto3" json:"can_escalate_privs,omitempty"`
	IsDisabled          bool     `protobuf:"varint,10,opt,name=is_disabled,json=isDisabled,proto3" json:"is_disabled,omitempty"`
	AccountCreated      string   `protobuf:"bytes,11,opt,name=account_created,json=accountCreated,proto3" json:"account_created,omitempty"`
	AccountExpires      string   `protobuf:"bytes,12,opt,name=account_expires,json=accountExpires,proto3" json:"account_expires,omitempty"`
	PasswordLastChanged string   `protobuf:"bytes,13,opt,name=password_last_changed,json=passwordLastChanged,proto3" json:"password_last_changed,omitempty"`
	AccountFirstLogin   string   `protobuf:"bytes,14,opt,name=account_first_login,json=accountFirstLogin,proto3" json:"account_first_login,omitempty"`
	AccountLastLogin    string   `protobuf:"bytes,15,opt,name=account_last_login,json=accountLastLogin,proto3" json:"account_last_login,omitempty"`
}

func (m *UserAccountObject) Reset()                    { *m = UserAccountObject{} }
func (m *UserAccountObject) String() string            { return proto.CompactTextString(m) }
func (*UserAccountObject) ProtoMessage()               {}
func (*UserAccountObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{17} }

func (m *UserAccountObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UserAccountObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *UserAccountObject) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserAccountObject) GetAccountLogin() string {
	if m != nil {
		return m.AccountLogin
	}
	return ""
}

func (m *UserAccountObject) GetAccountType() string {
	if m != nil {
		return m.AccountType
	}
	return ""
}

func (m *UserAccountObject) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *UserAccountObject) GetIsServiceAccount() bool {
	if m != nil {
		return m.IsServiceAccount
	}
	return false
}

func (m *UserAccountObject) GetIsPrivileged() bool {
	if m != nil {
		return m.IsPrivileged
	}
	return false
}

func (m *UserAccountObject) GetCanEscalatePrivs() bool {
	if m != nil {
		return m.CanEscalatePrivs
	}
	return false
}

func (m *UserAccountObject) GetIsDisabled() bool {
	if m != nil {
		return m.IsDisabled
	}
	return false
}

func (m *UserAccountObject) GetAccountCreated() string {
	if m != nil {
		return m.AccountCreated
	}
	return ""
}

func (m *UserAccountObject) GetAccountExpires() string {
	if m != nil {
		return m.AccountExpires
	}
	return ""
}

func (m *UserAccountObject) GetPasswordLastChanged() string {
	if m != nil {
		return m.PasswordLastChanged
	}
	return ""
}

func (m *UserAccountObject) GetAccountFirstLogin() string {
	if m != nil {
		return m.AccountFirstLogin
	}
	return ""
}

func (m *UserAccountObject) GetAccountLastLogin() string {
	if m != nil {
		return m.AccountLastLogin
	}
	return ""
}

// The Registry Key Object represents the properties of
// a Windows registry key.
type WindowsRegistryKeyObject struct {
	Type            string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions      []string `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	Key             string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Values          []string `protobuf:"bytes,4,rep,name=values" json:"values,omitempty"`
	Modified        string   `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	CreatorUserRef  string   `protobuf:"bytes,6,opt,name=creator_user_ref,json=creatorUserRef,proto3" json:"creator_user_ref,omitempty"`
	NumberOfSubkeys int64    `protobuf:"zigzag64,7,opt,name=number_of_subkeys,json=numberOfSubkeys,proto3" json:"number_of_subkeys,omitempty"`
}

func (m *WindowsRegistryKeyObject) Reset()         { *m = WindowsRegistryKeyObject{} }
func (m *WindowsRegistryKeyObject) String() string { return proto.CompactTextString(m) }
func (*WindowsRegistryKeyObject) ProtoMessage()    {}
func (*WindowsRegistryKeyObject) Descriptor() ([]byte, []int) {
	return fileDescriptorObservable, []int{18}
}

func (m *WindowsRegistryKeyObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *WindowsRegistryKeyObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *WindowsRegistryKeyObject) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *WindowsRegistryKeyObject) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *WindowsRegistryKeyObject) GetModified() string {
	if m != nil {
		return m.Modified
	}
	return ""
}

func (m *WindowsRegistryKeyObject) GetCreatorUserRef() string {
	if m != nil {
		return m.CreatorUserRef
	}
	return ""
}

func (m *WindowsRegistryKeyObject) GetNumberOfSubkeys() int64 {
	if m != nil {
		return m.NumberOfSubkeys
	}
	return 0
}

// The X.509 Certificate Object represents the properties of
// an X.509 certificate, as defined by ITU recommendation
// X.509 [X.509]
type X509CertificateObject struct {
	Type                      string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Extensions                []string          `protobuf:"bytes,2,rep,name=extensions" json:"extensions,omitempty"`
	IsSelfSigned              bool              `protobuf:"varint,3,opt,name=is_self_signed,json=isSelfSigned,proto3" json:"is_self_signed,omitempty"`
	Hashes                    map[string]string `protobuf:"bytes,4,rep,name=hashes" json:"hashes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Version                   string            `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	SerialNumber              string            `protobuf:"bytes,6,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	SignatureAlgorithm        string            `protobuf:"bytes,7,opt,name=signature_algorithm,json=signatureAlgorithm,proto3" json:"signature_algorithm,omitempty"`
	Issuer                    string            `protobuf:"bytes,8,opt,name=issuer,proto3" json:"issuer,omitempty"`
	ValidityNotBefore         string            `protobuf:"bytes,9,opt,name=validity_not_before,json=validityNotBefore,proto3" json:"validity_not_before,omitempty"`
	ValidityNotAfter          string            `protobuf:"bytes,10,opt,name=validity_not_after,json=validityNotAfter,proto3" json:"validity_not_after,omitempty"`
	Subject                   string            `protobuf:"bytes,11,opt,name=subject,proto3" json:"subject,omitempty"`
	SubjectPublicKeyAlgorithm string            `protobuf:"bytes,12,opt,name=subject_public_key_algorithm,json=subjectPublicKeyAlgorithm,proto3" json:"subject_public_key_algorithm,omitempty"`
	SubjectPublicKeyModulus   string            `protobuf:"bytes,13,opt,name=subject_public_key_modulus,json=subjectPublicKeyModulus,proto3" json:"subject_public_key_modulus,omitempty"`
	SubjectPublicKeyExponent  int64             `protobuf:"varint,14,opt,name=subject_public_key_exponent,json=subjectPublicKeyExponent,proto3" json:"subject_public_key_exponent,omitempty"`
}

func (m *X509CertificateObject) Reset()                    { *m = X509CertificateObject{} }
func (m *X509CertificateObject) String() string            { return proto.CompactTextString(m) }
func (*X509CertificateObject) ProtoMessage()               {}
func (*X509CertificateObject) Descriptor() ([]byte, []int) { return fileDescriptorObservable, []int{19} }

func (m *X509CertificateObject) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *X509CertificateObject) GetExtensions() []string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *X509CertificateObject) GetIsSelfSigned() bool {
	if m != nil {
		return m.IsSelfSigned
	}
	return false
}

func (m *X509CertificateObject) GetHashes() map[string]string {
	if m != nil {
		return m.Hashes
	}
	return nil
}

func (m *X509CertificateObject) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *X509CertificateObject) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *X509CertificateObject) GetSignatureAlgorithm() string {
	if m != nil {
		return m.SignatureAlgorithm
	}
	return ""
}

func (m *X509CertificateObject) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *X509CertificateObject) GetValidityNotBefore() string {
	if m != nil {
		return m.ValidityNotBefore
	}
	return ""
}

func (m *X509CertificateObject) GetValidityNotAfter() string {
	if m != nil {
		return m.ValidityNotAfter
	}
	return ""
}

func (m *X509CertificateObject) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *X509CertificateObject) GetSubjectPublicKeyAlgorithm() string {
	if m != nil {
		return m.SubjectPublicKeyAlgorithm
	}
	return ""
}

func (m *X509CertificateObject) GetSubjectPublicKeyModulus() string {
	if m != nil {
		return m.SubjectPublicKeyModulus
	}
	return ""
}

func (m *X509CertificateObject) GetSubjectPublicKeyExponent() int64 {
	if m != nil {
		return m.SubjectPublicKeyExponent
	}
	return 0
}

func init() {
	proto.RegisterType((*ArtifactObject)(nil), "mitre.stix.v2.ArtifactObject")
	proto.RegisterType((*AutonomousSystemObject)(nil), "mitre.stix.v2.AutonomousSystemObject")
	proto.RegisterType((*DirectoryObject)(nil), "mitre.stix.v2.DirectoryObject")
	proto.RegisterType((*DomainNameObject)(nil), "mitre.stix.v2.DomainNameObject")
	proto.RegisterType((*EmailAddressObject)(nil), "mitre.stix.v2.EmailAddressObject")
	proto.RegisterType((*EmailMessageObject)(nil), "mitre.stix.v2.EmailMessageObject")
	proto.RegisterType((*EmailHeaderComponent)(nil), "mitre.stix.v2.EmailHeaderComponent")
	proto.RegisterType((*EmailMIMEPartComponent)(nil), "mitre.stix.v2.EmailMIMEPartComponent")
	proto.RegisterType((*FileObject)(nil), "mitre.stix.v2.FileObject")
	proto.RegisterType((*IPv4AddressObject)(nil), "mitre.stix.v2.IPv4AddressObject")
	proto.RegisterType((*IPv6AddressObject)(nil), "mitre.stix.v2.IPv6AddressObject")
	proto.RegisterType((*MacAddressObject)(nil), "mitre.stix.v2.MacAddressObject")
	proto.RegisterType((*MutexObject)(nil), "mitre.stix.v2.MutexObject")
	proto.RegisterType((*NetworkTrafficObject)(nil), "mitre.stix.v2.NetworkTrafficObject")
	proto.RegisterType((*ProcessObject)(nil), "mitre.stix.v2.ProcessObject")
	proto.RegisterType((*SoftwareObject)(nil), "mitre.stix.v2.SoftwareObject")
	proto.RegisterType((*URLObject)(nil), "mitre.stix.v2.URLObject")
	proto.RegisterType((*UserAccountObject)(nil), "mitre.stix.v2.UserAccountObject")
	proto.RegisterType((*WindowsRegistryKeyObject)(nil), "mitre.stix.v2.WindowsRegistryKeyObject")
	proto.RegisterType((*X509CertificateObject)(nil), "mitre.stix.v2.X509CertificateObject")
}

func init() {
	proto.RegisterFile("pkg/protocol/mitre/stix/v2/observable.proto", fileDescriptorObservable)
}

var fileDescriptorObservable = []byte{
	// 2206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xcd, 0x72, 0x1b, 0xc7,
	0xf1, 0x2f, 0x10, 0x24, 0x08, 0x34, 0x3e, 0x08, 0xae, 0x68, 0x0a, 0xa4, 0xed, 0xbf, 0x65, 0xf8,
	0xe3, 0xcf, 0xc4, 0x2e, 0xd0, 0x61, 0x1c, 0x97, 0x9d, 0x94, 0x93, 0x22, 0x29, 0x2a, 0x52, 0x49,
	0x94, 0x58, 0x4b, 0x49, 0x71, 0xa5, 0x94, 0xda, 0x1a, 0xec, 0x36, 0xc0, 0x09, 0x17, 0x33, 0xa8,
	0x99, 0x01, 0x48, 0xf8, 0x01, 0x72, 0x48, 0x6e, 0x79, 0x04, 0x5f, 0x52, 0x95, 0x4b, 0x0e, 0xb9,
	0xe5, 0x11, 0x72, 0x8a, 0x5f, 0x22, 0x87, 0xe4, 0x25, 0x52, 0x3d, 0x33, 0x0b, 0x2c, 0x21, 0xd8,
	0x15, 0x17, 0xe4, 0x43, 0x4e, 0x9c, 0xe9, 0x5f, 0xf7, 0x6c, 0xcf, 0x74, 0x4f, 0xff, 0xa6, 0x41,
	0xf8, 0x60, 0x78, 0xd9, 0xdf, 0x1f, 0x2a, 0x69, 0x64, 0x2c, 0xd3, 0xfd, 0x01, 0x37, 0x0a, 0xf7,
	0xb5, 0xe1, 0xd7, 0xfb, 0xe3, 0x83, 0x7d, 0xd9, 0xd5, 0xa8, 0xc6, 0xac, 0x9b, 0x62, 0xc7, 0x6a,
	0x04, 0x75, 0x8b, 0x77, 0x08, 0xef, 0x8c, 0x0f, 0xda, 0x7f, 0x5c, 0x81, 0xc6, 0xa1, 0x32, 0xbc,
	0xc7, 0x62, 0xf3, 0xa4, 0xfb, 0x5b, 0x8c, 0x4d, 0x10, 0xc0, 0xaa, 0x99, 0x0c, 0xb1, 0x55, 0xb8,
	0x53, 0xd8, 0xab, 0x84, 0x76, 0x1c, 0xfc, 0x1f, 0x00, 0x5e, 0x1b, 0x14, 0x9a, 0x4b, 0xa1, 0x5b,
	0x2b, 0x77, 0x8a, 0x7b, 0x95, 0x30, 0x27, 0x09, 0x5e, 0x87, 0xca, 0x80, 0x0f, 0x30, 0xb2, 0x86,
	0x45, 0x6b, 0x58, 0x26, 0xc1, 0x53, 0x32, 0x7e, 0x0b, 0xaa, 0x43, 0x36, 0x49, 0x25, 0x4b, 0xa2,
	0x2e, 0x17, 0xad, 0xd5, 0x3b, 0x85, 0xbd, 0x5a, 0x08, 0x5e, 0x74, 0xc4, 0x45, 0xd0, 0x84, 0xe2,
	0x48, 0xa5, 0xad, 0x35, 0x6b, 0x47, 0xc3, 0xe0, 0x10, 0x4a, 0x17, 0x4c, 0x5f, 0xa0, 0x6e, 0x95,
	0xee, 0x14, 0xf7, 0xaa, 0x07, 0x3f, 0xe8, 0xdc, 0x70, 0xbb, 0x73, 0xd3, 0xe5, 0xce, 0x7d, 0xab,
	0x7b, 0x22, 0x8c, 0x9a, 0x84, 0xde, 0x70, 0xf7, 0x33, 0xa8, 0xe6, 0xc4, 0xf4, 0x8d, 0x4b, 0x9c,
	0xf8, 0x4d, 0xd1, 0x30, 0xd8, 0x82, 0xb5, 0x31, 0x4b, 0x47, 0xd8, 0x5a, 0xb1, 0x32, 0x37, 0xf9,
	0xe9, 0xca, 0xa7, 0x85, 0xf6, 0xef, 0x0b, 0xb0, 0x7d, 0x38, 0x32, 0x52, 0xc8, 0x81, 0x1c, 0xe9,
	0xf3, 0x89, 0x36, 0x38, 0x58, 0xe2, 0x70, 0xb6, 0xa1, 0x24, 0x46, 0x83, 0x2e, 0x2a, 0x7b, 0x32,
	0x41, 0xe8, 0x67, 0xb4, 0x96, 0x60, 0x03, 0xb4, 0x07, 0x52, 0x09, 0xed, 0x98, 0xdc, 0x54, 0x5c,
	0x65, 0x47, 0xa1, 0xb8, 0x6a, 0xff, 0xbb, 0x00, 0x1b, 0x77, 0xb9, 0xc2, 0xd8, 0x48, 0x35, 0x59,
	0xc2, 0x8b, 0x00, 0x56, 0x87, 0xcc, 0x5c, 0xf8, 0xe8, 0xd8, 0x71, 0xb0, 0x03, 0x65, 0xfa, 0x1b,
	0xa1, 0x88, 0xbd, 0x17, 0xeb, 0x34, 0x3f, 0x11, 0x71, 0xd0, 0x82, 0xf5, 0x58, 0x21, 0x33, 0x98,
	0x78, 0x67, 0xb2, 0x69, 0xb0, 0x0b, 0xe5, 0x81, 0x4c, 0x78, 0x8f, 0x63, 0xd2, 0x2a, 0xf9, 0x50,
	0xfb, 0x39, 0x61, 0x2c, 0x8e, 0x51, 0x6b, 0x4c, 0x5a, 0xeb, 0x0e, 0xcb, 0xe6, 0xc1, 0x3b, 0x50,
	0x8f, 0xa5, 0x30, 0x8c, 0x0b, 0x1d, 0x29, 0xec, 0xe9, 0x56, 0xd9, 0xfa, 0x58, 0xcb, 0x84, 0x21,
	0xf6, 0x74, 0xfb, 0x77, 0x05, 0x68, 0xde, 0x95, 0x03, 0xc6, 0xc5, 0x63, 0x36, 0xc0, 0x25, 0xb6,
	0x3b, 0x8d, 0x6e, 0x31, 0x17, 0xdd, 0x60, 0x0f, 0x9a, 0x0a, 0xb5, 0x4c, 0xc7, 0xa8, 0x23, 0x23,
	0x9d, 0x1b, 0xab, 0xd6, 0xb6, 0x91, 0xc9, 0x9f, 0x4a, 0xeb, 0xc8, 0x9f, 0x0a, 0x10, 0x9c, 0x0c,
	0x18, 0x4f, 0x0f, 0x93, 0x44, 0xa1, 0xd6, 0xaf, 0xdc, 0x95, 0xb7, 0xa1, 0x96, 0x70, 0x3d, 0x4c,
	0xd9, 0x24, 0xca, 0x65, 0x41, 0xd5, 0xcb, 0x68, 0xf7, 0xc1, 0xbb, 0xd0, 0xe8, 0x62, 0x2a, 0x45,
	0x3f, 0x73, 0xd6, 0x87, 0xa2, 0xe6, 0xa5, 0xd6, 0xd5, 0xf6, 0xd7, 0xab, 0xde, 0xd3, 0x53, 0xd4,
	0x9a, 0xf5, 0x97, 0x39, 0xb4, 0xb7, 0xa1, 0xc6, 0x75, 0x34, 0x18, 0xa5, 0x86, 0x0f, 0x99, 0x32,
	0xd6, 0xe1, 0x72, 0x58, 0xe5, 0xfa, 0x34, 0x13, 0xd1, 0xb2, 0x09, 0x33, 0xd3, 0xa4, 0xa5, 0x31,
	0x99, 0x51, 0x10, 0x51, 0x18, 0x57, 0x00, 0x9c, 0x97, 0x55, 0x2f, 0xb3, 0x35, 0x60, 0x07, 0xca,
	0x3d, 0x25, 0x07, 0x76, 0x13, 0x2e, 0x69, 0xd6, 0x69, 0x1e, 0x62, 0x2f, 0x78, 0x13, 0x40, 0xa3,
	0x48, 0x50, 0x59, 0xd0, 0x65, 0x4d, 0xc5, 0x49, 0x08, 0xbe, 0x0d, 0xeb, 0x59, 0xa4, 0x5c, 0xc2,
	0x94, 0x8c, 0x8d, 0x10, 0x01, 0x71, 0xec, 0x80, 0x8a, 0x03, 0xe2, 0xd8, 0x02, 0x3b, 0x50, 0xee,
	0x66, 0x08, 0x58, 0x64, 0xbd, 0xeb, 0xa1, 0x16, 0xac, 0xeb, 0x91, 0x3d, 0x9f, 0x56, 0xd5, 0x79,
	0xe1, 0xa7, 0xc1, 0x7b, 0xd0, 0x50, 0x18, 0x23, 0x1f, 0x63, 0x12, 0xa5, 0x5c, 0xa0, 0x6e, 0xd5,
	0xac, 0x69, 0x3d, 0x93, 0x3e, 0x22, 0x61, 0x10, 0xc1, 0x0e, 0x4b, 0x12, 0x6e, 0xb8, 0x14, 0x2c,
	0x8d, 0x2e, 0x90, 0x25, 0xa8, 0x74, 0xd4, 0xe3, 0x98, 0x26, 0xba, 0x55, 0xb7, 0xb5, 0xea, 0x9d,
	0xb9, 0x5a, 0x65, 0x63, 0x73, 0xdf, 0x6a, 0x1e, 0xcb, 0xc1, 0x50, 0x0a, 0x14, 0x26, 0xbc, 0x3d,
	0x5b, 0xc5, 0x41, 0xfa, 0x9e, 0x5d, 0x83, 0xce, 0xb7, 0x2b, 0x93, 0x49, 0xab, 0xe1, 0xce, 0x97,
	0xc6, 0xc1, 0x23, 0x68, 0xd0, 0xdf, 0x5c, 0x60, 0x36, 0xec, 0x97, 0xde, 0x5b, 0xf4, 0xa5, 0xd3,
	0x07, 0xa7, 0x27, 0x67, 0x4c, 0x99, 0xd9, 0xb7, 0xea, 0x64, 0x3c, 0x8b, 0x60, 0x1b, 0xea, 0x8a,
	0x5d, 0x45, 0x48, 0xca, 0xf6, 0xc8, 0x9b, 0x2e, 0x5c, 0x8a, 0x5d, 0xd9, 0x05, 0x28, 0xa7, 0x7e,
	0x0e, 0x5b, 0x8b, 0xdc, 0x5e, 0x5c, 0x45, 0xb9, 0xc1, 0x41, 0x96, 0x4d, 0x6e, 0xd2, 0xfe, 0xaa,
	0x00, 0xdb, 0x8b, 0xbd, 0x99, 0x6e, 0xb0, 0x90, 0xdb, 0xe0, 0x1d, 0xa8, 0xd9, 0x0d, 0x92, 0x5f,
	0xe4, 0x91, 0xab, 0xc8, 0x40, 0xb2, 0x90, 0x5d, 0x51, 0x16, 0xcc, 0xa7, 0x58, 0xf1, 0xe5, 0x14,
	0xdb, 0x87, 0x5b, 0x99, 0x0a, 0x5d, 0x22, 0xa9, 0xed, 0xf9, 0xfa, 0x44, 0x0d, 0x3c, 0x74, 0x77,
	0x86, 0xb4, 0xff, 0xb0, 0x06, 0x70, 0x8f, 0xa7, 0xcb, 0x5c, 0x98, 0xcf, 0xa7, 0x3c, 0x55, 0x5c,
	0x18, 0x91, 0xd9, 0xf2, 0x8b, 0x38, 0x8a, 0x3e, 0xa9, 0xf9, 0x97, 0xee, 0x32, 0x05, 0xa1, 0x1d,
	0x4f, 0x59, 0x61, 0x2d, 0xc7, 0x0a, 0x3b, 0x50, 0xa6, 0xbf, 0xb6, 0x4e, 0xfb, 0xdb, 0x43, 0x73,
	0xaa, 0xd3, 0x7b, 0xd0, 0x1c, 0xb0, 0x3e, 0x8f, 0x23, 0x47, 0x2a, 0xd1, 0x05, 0x5e, 0xfb, 0x3b,
	0xd4, 0xb0, 0xf2, 0xc7, 0x56, 0x7c, 0x1f, 0xaf, 0x6f, 0x72, 0x74, 0x79, 0x8e, 0xa3, 0x73, 0xe5,
	0xbe, 0xf2, 0xcd, 0xe5, 0x1e, 0xbe, 0xa5, 0xdc, 0x57, 0xe7, 0xca, 0xfd, 0x47, 0xb0, 0x35, 0x64,
	0xca, 0x45, 0xc3, 0xb3, 0x97, 0x8d, 0x6d, 0xcd, 0xc5, 0xc3, 0x61, 0x53, 0x62, 0xf3, 0x31, 0xe6,
	0x9a, 0xf6, 0xa8, 0x26, 0x43, 0x72, 0xa4, 0x9e, 0x55, 0x9f, 0x93, 0x4c, 0x14, 0xfc, 0x08, 0xb6,
	0x3c, 0xce, 0xa5, 0x88, 0x58, 0xda, 0x97, 0x8a, 0x9b, 0x8b, 0x81, 0xbf, 0x2d, 0xb7, 0x66, 0xd8,
	0x61, 0x06, 0xd1, 0xc5, 0x4e, 0x70, 0x6a, 0x42, 0xd9, 0xbb, 0x61, 0x95, 0xeb, 0x33, 0xe9, 0x43,
	0x9c, 0xbc, 0xcc, 0x4e, 0xcd, 0x97, 0xd9, 0x89, 0x5e, 0x32, 0x59, 0x8a, 0xd1, 0x56, 0x36, 0x5d,
	0x9a, 0x7a, 0x51, 0x88, 0xbd, 0x65, 0x1e, 0x1d, 0x7f, 0x29, 0xc0, 0xe6, 0x83, 0xb3, 0xf1, 0xc7,
	0xdf, 0x17, 0xdf, 0xfc, 0xd7, 0xd4, 0x17, 0xbc, 0x0f, 0x1b, 0x37, 0x69, 0x47, 0xb7, 0xd6, 0x5c,
	0x2d, 0xcc, 0xf3, 0x8e, 0xce, 0x3c, 0xfe, 0xe4, 0x7f, 0xc7, 0xe3, 0x17, 0xd0, 0x3c, 0x65, 0xf1,
	0xf7, 0xe4, 0x6f, 0xfb, 0x19, 0x54, 0x4f, 0x47, 0x06, 0xaf, 0x97, 0x7b, 0xa4, 0xd9, 0xcb, 0x5f,
	0x9c, 0x5d, 0xfe, 0xf6, 0x3f, 0xd6, 0x60, 0xeb, 0x31, 0x9a, 0x2b, 0xa9, 0x2e, 0x9f, 0x2a, 0xd6,
	0xeb, 0xf1, 0x78, 0x39, 0xcf, 0xb5, 0xc9, 0xa8, 0xbd, 0x12, 0xba, 0x09, 0xe5, 0x29, 0x8a, 0xc4,
	0x97, 0x4a, 0x1a, 0x52, 0xb1, 0xe0, 0x3a, 0x62, 0xb1, 0xe1, 0x63, 0x57, 0x8a, 0xca, 0x61, 0x99,
	0xeb, 0x43, 0x3b, 0x27, 0xe6, 0xd5, 0x2a, 0xce, 0x71, 0x79, 0x49, 0xab, 0xd8, 0x73, 0x75, 0xa2,
	0x4d, 0x8e, 0xc7, 0x4b, 0x89, 0xa6, 0x7b, 0x41, 0x05, 0x8c, 0x2c, 0x86, 0x52, 0x19, 0x5b, 0x7a,
	0x36, 0x43, 0x5a, 0xe1, 0x4c, 0x2a, 0x43, 0x10, 0xd9, 0x58, 0xa8, 0xe2, 0xa0, 0x44, 0x1b, 0x0b,
	0xbd, 0x01, 0x95, 0xac, 0xad, 0xc9, 0x98, 0x7c, 0x26, 0xa0, 0xd7, 0x11, 0xad, 0xd9, 0x9d, 0x18,
	0x8c, 0x62, 0x39, 0x12, 0x8e, 0xd2, 0x83, 0xb0, 0xa6, 0x55, 0x7c, 0x34, 0x31, 0x78, 0x4c, 0x32,
	0xd2, 0xa2, 0xe5, 0x73, 0x5a, 0x35, 0xa7, 0x95, 0x68, 0x33, 0xd3, 0x7a, 0x0b, 0xaa, 0xd6, 0x3f,
	0x16, 0x5f, 0xa2, 0xd1, 0xb6, 0xf2, 0x04, 0x21, 0x90, 0x8b, 0x4e, 0x42, 0x0a, 0xd6, 0x4b, 0xaf,
	0xd0, 0x70, 0x0a, 0xe4, 0xa8, 0x57, 0xb8, 0x0b, 0x6b, 0x7c, 0xd8, 0xe3, 0xd7, 0x9e, 0x9a, 0x3b,
	0x73, 0x44, 0xb0, 0x28, 0x80, 0x9d, 0x07, 0x64, 0xe0, 0x18, 0xc1, 0x19, 0x53, 0x22, 0x3b, 0x3f,
	0x5c, 0xbb, 0x34, 0x63, 0xe7, 0xba, 0xf5, 0xc5, 0x4a, 0xe9, 0x3c, 0xdf, 0x87, 0x0d, 0xe7, 0xce,
	0x4c, 0x6f, 0xd3, 0x57, 0x35, 0x72, 0x69, 0xaa, 0xf7, 0x01, 0x6c, 0xa2, 0x88, 0xd9, 0x50, 0x8f,
	0x52, 0x66, 0xd0, 0x57, 0xb6, 0xc0, 0x9e, 0x64, 0x33, 0x0f, 0xd8, 0x5b, 0xd4, 0x81, 0x5b, 0x39,
	0x59, 0x12, 0x75, 0x5d, 0xc1, 0xbe, 0x65, 0x17, 0xce, 0xaf, 0x93, 0x1c, 0x51, 0xbd, 0xde, 0xfd,
	0x14, 0x60, 0xb6, 0x83, 0xef, 0x54, 0xeb, 0xfe, 0xb9, 0x0a, 0xf5, 0x33, 0x25, 0xe3, 0xe5, 0x6e,
	0xa1, 0xcb, 0xd1, 0x0b, 0x9e, 0x24, 0x28, 0xfc, 0x53, 0xb5, 0xcc, 0xf5, 0x7d, 0x3b, 0x27, 0x77,
	0x86, 0xdc, 0xa5, 0x74, 0x31, 0xa4, 0xe1, 0x42, 0x62, 0xcd, 0xd1, 0x5e, 0xe9, 0x26, 0xed, 0x35,
	0xa1, 0x18, 0x5f, 0x65, 0x4d, 0x0c, 0x0d, 0x29, 0x1b, 0x99, 0xea, 0x8f, 0x06, 0x28, 0x4c, 0xf6,
	0x14, 0x9d, 0x09, 0xdc, 0x03, 0x65, 0x30, 0x60, 0xc2, 0x3d, 0x1f, 0x3d, 0x8b, 0x56, 0xbd, 0x8c,
	0x1e, 0x8f, 0xc1, 0x25, 0xbc, 0x86, 0x62, 0xcc, 0x95, 0x14, 0x64, 0x12, 0x8d, 0x99, 0xe2, 0xd4,
	0x98, 0xbb, 0xd4, 0xae, 0x1e, 0x7c, 0x32, 0x97, 0x32, 0x37, 0x0e, 0xa8, 0x73, 0x32, 0xb3, 0x7c,
	0x9e, 0x19, 0xba, 0xd4, 0xd9, 0xc2, 0x05, 0x50, 0xf0, 0x31, 0x6c, 0xcb, 0x21, 0x0a, 0x4c, 0xa2,
	0x58, 0x0a, 0x81, 0xb1, 0x65, 0x3f, 0x1b, 0xfe, 0xaa, 0x75, 0x7d, 0xcb, 0xa1, 0xc7, 0x53, 0xd0,
	0xa6, 0xc0, 0x1e, 0x34, 0xed, 0x01, 0x48, 0x15, 0x8d, 0xb4, 0x7f, 0x91, 0x3b, 0xc2, 0x6e, 0x78,
	0xf9, 0x33, 0xed, 0x9e, 0xe5, 0x6f, 0x02, 0x74, 0xb9, 0x60, 0x9e, 0xd4, 0xeb, 0xee, 0xd5, 0xee,
	0x24, 0x1e, 0xf6, 0xec, 0x4f, 0xb0, 0xa3, 0xe7, 0x8a, 0x93, 0x78, 0x38, 0xbe, 0xe0, 0x69, 0xe2,
	0x3c, 0xda, 0x70, 0x87, 0x69, 0x25, 0xe4, 0xc6, 0xee, 0x2f, 0x61, 0xe7, 0x1b, 0xf7, 0xfb, 0x9d,
	0x12, 0xed, 0x6f, 0x05, 0x68, 0x9c, 0xcb, 0x9e, 0xb9, 0x62, 0x0a, 0x5f, 0x6d, 0x59, 0xb6, 0x09,
	0x32, 0xcc, 0xfa, 0x20, 0x1a, 0x52, 0x82, 0xa4, 0x4c, 0xf4, 0x47, 0xac, 0x8f, 0x19, 0xff, 0xcc,
	0x04, 0xc1, 0x36, 0x94, 0xc6, 0x28, 0x12, 0xa9, 0xb2, 0x9a, 0xe9, 0x66, 0x94, 0x82, 0x63, 0x54,
	0xf4, 0x1d, 0x9f, 0x6c, 0xd9, 0xb4, 0xfd, 0x0c, 0x2a, 0xcf, 0xc2, 0x47, 0xaf, 0x9c, 0xa6, 0xbe,
	0x5e, 0x85, 0x4d, 0x8a, 0xe2, 0x61, 0x6c, 0xeb, 0xe1, 0x12, 0xeb, 0xdf, 0x86, 0x75, 0x9b, 0x25,
	0x3c, 0xf1, 0x5f, 0x28, 0xd1, 0xf4, 0x81, 0x6d, 0xf5, 0x99, 0x5b, 0x3d, 0x4a, 0x65, 0x9f, 0x67,
	0x8f, 0xf0, 0x9a, 0x17, 0x3e, 0x22, 0x19, 0xdd, 0x98, 0x4c, 0x29, 0xdf, 0x35, 0x7a, 0x99, 0x7d,
	0x95, 0xce, 0xf7, 0xc8, 0xa5, 0x97, 0x7b, 0xe4, 0x0f, 0x21, 0xe0, 0x3a, 0xd2, 0xa8, 0xc6, 0x3c,
	0xc6, 0xc8, 0x1b, 0xdb, 0x93, 0x2c, 0x87, 0x4d, 0xae, 0xcf, 0x1d, 0xe0, 0xf7, 0x4a, 0x8e, 0x71,
	0x1d, 0x0d, 0x15, 0x1f, 0xf3, 0x14, 0xfb, 0x98, 0x58, 0x32, 0x2a, 0x87, 0x35, 0xae, 0xcf, 0xa6,
	0x32, 0x5a, 0x32, 0x66, 0x22, 0x42, 0x1d, 0x33, 0xaa, 0x76, 0x56, 0x5d, 0xdb, 0x0b, 0x5d, 0x0e,
	0x9b, 0x31, 0x13, 0x27, 0x1e, 0x20, 0x13, 0xcb, 0x0c, 0x5c, 0x53, 0xc7, 0x41, 0x29, 0xea, 0x9e,
	0xc8, 0xe5, 0x10, 0xb8, 0xbe, 0xeb, 0x25, 0xc1, 0xff, 0xc3, 0x46, 0xb6, 0xcf, 0xac, 0xd6, 0xb8,
	0xb7, 0x72, 0xc3, 0x8b, 0x8f, 0x7d, 0xc9, 0xc9, 0x29, 0xe2, 0xf5, 0x90, 0x2b, 0xdb, 0x83, 0xe6,
	0x15, 0x4f, 0x9c, 0x34, 0x38, 0x80, 0xd7, 0x86, 0x4c, 0xeb, 0x2b, 0xa9, 0x92, 0x28, 0x65, 0xda,
	0x44, 0xf1, 0x05, 0x13, 0x7d, 0xff, 0x62, 0xae, 0x84, 0xb7, 0x32, 0xf0, 0x11, 0xd3, 0xe6, 0xd8,
	0x41, 0x54, 0xdc, 0xb3, 0xc5, 0x7b, 0x5c, 0xe9, 0x2c, 0x30, 0xee, 0x66, 0x6e, 0x7a, 0xe8, 0x1e,
	0x21, 0x2e, 0x3a, 0x1f, 0x42, 0x30, 0x0d, 0x21, 0x9b, 0xaa, 0xbb, 0xa7, 0x73, 0x33, 0x8b, 0x23,
	0xf3, 0xda, 0xed, 0x7f, 0x15, 0xa0, 0xf5, 0x2b, 0x2e, 0x12, 0x79, 0xa5, 0x43, 0xec, 0x73, 0x6d,
	0xd4, 0xe4, 0x21, 0x2e, 0xf3, 0x6b, 0x95, 0xbf, 0xe4, 0xc5, 0xd9, 0x25, 0xa7, 0xfb, 0x43, 0xf9,
	0x9b, 0xbd, 0x01, 0xfd, 0xec, 0x46, 0x7f, 0xb2, 0x36, 0xd7, 0x9f, 0x2c, 0x2a, 0x67, 0xa5, 0x85,
	0xe5, 0xec, 0x87, 0xb0, 0xe9, 0x1b, 0x28, 0xd9, 0x8b, 0xf4, 0xa8, 0x7b, 0x89, 0x13, 0x6d, 0xb3,
	0x28, 0x08, 0x37, 0x1c, 0xf0, 0xa4, 0x77, 0xee, 0xc4, 0xed, 0xbf, 0xae, 0xc1, 0x6b, 0x5f, 0xfc,
	0xe4, 0xa3, 0xcf, 0x8e, 0x51, 0x19, 0xde, 0xe3, 0x31, 0x33, 0xcb, 0xd4, 0x96, 0x77, 0xa1, 0x61,
	0x13, 0x38, 0xed, 0x45, 0x9a, 0xf7, 0x05, 0x26, 0x9e, 0xca, 0x6a, 0x94, 0xbc, 0x69, 0xef, 0xdc,
	0xca, 0x82, 0xfb, 0xd3, 0x46, 0x73, 0xd5, 0x92, 0xc5, 0x47, 0x73, 0x64, 0xb1, 0xd0, 0x9f, 0x85,
	0x3d, 0x67, 0xae, 0xde, 0xac, 0xdd, 0xa8, 0x37, 0x74, 0x39, 0x34, 0x2a, 0xce, 0x52, 0xdf, 0x4b,
	0xfa, 0xa3, 0xaa, 0x39, 0xa1, 0x6b, 0x24, 0xa9, 0xcb, 0x26, 0x37, 0x99, 0x19, 0x29, 0xcc, 0x35,
	0x60, 0xae, 0x74, 0x05, 0x53, 0x68, 0xd6, 0x7f, 0x6d, 0x43, 0x89, 0x6b, 0x3d, 0x42, 0xe5, 0x7b,
	0x4e, 0x3f, 0xa3, 0x84, 0x1c, 0xb3, 0x94, 0x27, 0xdc, 0x4c, 0x22, 0x21, 0x4d, 0xd4, 0xc5, 0x9e,
	0x54, 0x19, 0x6f, 0x6e, 0x66, 0xd0, 0x63, 0x69, 0x8e, 0x2c, 0x40, 0x09, 0x79, 0x43, 0x9f, 0xf5,
	0x0c, 0x2a, 0xdf, 0x91, 0x36, 0x73, 0xea, 0x87, 0x24, 0xff, 0x96, 0x1f, 0x7a, 0x7e, 0x01, 0x6f,
	0xf8, 0x61, 0x34, 0x1c, 0x75, 0x53, 0x1e, 0x53, 0x4f, 0x98, 0xdb, 0x89, 0xbb, 0x72, 0x3b, 0x5e,
	0xe7, 0xcc, 0xaa, 0x3c, 0xc4, 0xc9, 0x6c, 0x43, 0x3f, 0x83, 0xdd, 0x05, 0x0b, 0x0c, 0x64, 0x32,
	0x4a, 0x47, 0xda, 0x5f, 0xc1, 0xdb, 0xf3, 0xe6, 0xa7, 0x0e, 0x0e, 0x3e, 0x87, 0xd7, 0x17, 0x18,
	0xe3, 0xb5, 0xfb, 0x71, 0xc4, 0x5e, 0xc7, 0x62, 0xd8, 0x9a, 0xb7, 0x3e, 0xf1, 0xf8, 0x12, 0xfd,
	0xe5, 0xd1, 0x6f, 0x60, 0x57, 0xaa, 0x7e, 0xe7, 0x4b, 0x14, 0xdc, 0x5c, 0x30, 0x75, 0x33, 0x7f,
	0x8e, 0x36, 0x9e, 0x4c, 0xff, 0x51, 0x70, 0x46, 0x2f, 0xec, 0xb3, 0xc2, 0xaf, 0x4b, 0x84, 0x8d,
	0x0f, 0xbe, 0x5a, 0x29, 0x9e, 0x9e, 0x7f, 0xf1, 0xe7, 0x95, 0xfa, 0xa9, 0x35, 0x38, 0x27, 0x83,
	0xe7, 0x07, 0x7f, 0xf7, 0xf3, 0x17, 0x34, 0x7f, 0xf1, 0xfc, 0xa0, 0x5b, 0xb2, 0x0f, 0xf3, 0x1f,
	0xff, 0x27, 0x00, 0x00, 0xff, 0xff, 0x64, 0x58, 0xed, 0x26, 0x8d, 0x18, 0x00, 0x00,
}
